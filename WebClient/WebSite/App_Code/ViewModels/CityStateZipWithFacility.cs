/*	Generated by CodeGen written by Concord Mfg
	*  Transform file used: JoinBusinessEntity (v0.1.0.0).xslt
	*  Date generated: 3/28/2012 12:46:17 PM
	*  CodeGen version: 0.1.0.0  */

using System;
using System.Collections;
using System.Collections.Generic;
using ISNet.WebUI.DataSource;

namespace ConcordMfg.PremierSeniorSolutions.Client.ViewModels
{
	/// <summary>
	/// The CityStateZipWithFacility class of the web UI tier.
	/// </summary>
	public class CityStateZipWithFacility
	{
		#region Private Fields
		private ConcordMfg.PremierSeniorSolutions.WebService.Client.CityStateZipWithFacilitySvc.CityStateZipWithFacility _cityStateZipWithFacility = null;
		private IEnumerable _owner;
		#endregion


		#region Constructors
		/// <summary>
		/// Initializes a new instance of CityStateZipWithFacility class for the UI tier.
		/// </summary>
		public CityStateZipWithFacility()
		{
			_cityStateZipWithFacility = new ConcordMfg.PremierSeniorSolutions.WebService.Client.CityStateZipWithFacilitySvc.CityStateZipWithFacility();
		}

		/// <summary>
		/// Initializes a new instance of CityStateZipWithFacility class for the UI tier taking a proxy client object as input.
		/// </summary>
		/// <param name="cityStateZipWithFacility">CityStateZipWithFacility proxy client object.</param>
		public CityStateZipWithFacility(ConcordMfg.PremierSeniorSolutions.WebService.Client.CityStateZipWithFacilitySvc.CityStateZipWithFacility cityStateZipWithFacility)
		{
			_cityStateZipWithFacility = cityStateZipWithFacility;
		}

		/// <summary>
		/// Initializes a new instance of CityStateZip class given its properties for the UI tier.
		/// </summary>
		/// <param name="cityStateZipGuid">City State Zip Guid</param>
		/// <param name="city">City</param>
		/// <param name="state">State</param>
		/// <param name="zipCode">Zip Code</param>
		/// <param name="facilityGuid">Facility Guid</param>
		public CityStateZipWithFacility(Guid cityStateZipGuid, string city, string state, string zipCode, Guid facilityGuid)
			: this()
		{
			_cityStateZipWithFacility.CityStateZipGuid = cityStateZipGuid;
			_cityStateZipWithFacility.City = city;
			_cityStateZipWithFacility.State = state;
			_cityStateZipWithFacility.ZipCode = zipCode;
			_cityStateZipWithFacility.FacilityGuid = facilityGuid;
		}
		#endregion


		#region Properties

		/// <summary>
		/// Gets and sets City State Zip Guid from City State Zip.
		/// </summary>
		[PrimaryKey()]
		[Caption("City State Zip Guid")]
		public Guid CityStateZipGuid
		{
			get { return _cityStateZipWithFacility.CityStateZipGuid; }
			set { _cityStateZipWithFacility.CityStateZipGuid = value; }
		}
		/// <summary>
		/// Gets and sets City from City State Zip.
		/// </summary>
		[Caption("City")]
		public string City
		{
			get { return _cityStateZipWithFacility.City; }
			set { _cityStateZipWithFacility.City = value; }
		}
		/// <summary>
		/// Gets and sets State from City State Zip.
		/// </summary>
		[Caption("State")]
		public string State
		{
			get { return _cityStateZipWithFacility.State; }
			set { _cityStateZipWithFacility.State = value; }
		}
		/// <summary>
		/// Gets and sets Zip Code from City State Zip.
		/// </summary>
		[Caption("Zip Code")]
		public string ZipCode
		{
			get { return _cityStateZipWithFacility.ZipCode; }
			set { _cityStateZipWithFacility.ZipCode = value; }
		}
		/// <summary>
		/// Gets and sets Facility Guid from Facility.
		/// </summary>
		[Caption("Facility Guid")]
		public Guid FacilityGuid
		{
			get { return _cityStateZipWithFacility.FacilityGuid; }
			set { _cityStateZipWithFacility.FacilityGuid = value; }
		}

		/// <summary>
		/// Gets and sets the collection that  belongs to.
		/// </summary>
		internal IEnumerable Owner
		{
			get { return _owner; }
			set { _owner = value; }
		}
		#endregion


		#region Methods
		/// <summary>
		/// Updates the class.
		/// </summary>
		public void Update()
		{
		}

		/// <summary>
		/// Deletes this from the owned collection class.
		/// </summary>
		public void Delete()
		{
			CityStateZipWithFacilityCollection owner = this.Owner as CityStateZipWithFacilityCollection;
			owner.Remove(this);
		}
		#endregion
	}
}