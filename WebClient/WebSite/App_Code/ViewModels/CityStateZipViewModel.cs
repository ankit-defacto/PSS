/*	Generated by CodeGen written by Concord Mfg
 *  Transform file used: BEViewModel (v0.1.0.0).xslt
 *  Date generated: 3/28/2012 12:46:16 PM
 *  CodeGen version: 0.1.0.0  */

using System;
using System.Collections.Generic;
using ConcordMfg.PremierSeniorSolutions.Client.Models;


namespace ConcordMfg.PremierSeniorSolutions.Client.ViewModels
{
	/// <summary>
	/// View Model for City State Zip (CityStateZip).
	/// </summary>
	public class CityStateZipViewModel : NotifyPropertyChangedBaseWithOwner
	{
		#region Private Fields
		protected Guid _cityStateZipGuid = Guid.Empty;
		protected string _city = null;
		protected string _state = null;
		protected string _zipCode = null;

		private FacilityCollection _facilities = null;

		#endregion


		#region Constructors
		public CityStateZipViewModel()
		{
		}

		public CityStateZipViewModel(Guid cityStateZipGuid, string city, string state, string zipCode)
		{
			this.CityStateZipGuid = cityStateZipGuid;
			this.City = city;
			this.State = state;
			this.ZipCode = zipCode;
		}
		#endregion


		#region Private GetAndSet Methods
		private void GetAndSetFacilities(Guid cityStateZipGuid)
		{
			FacilityCollection facilities = DataAccess.GetFacilitiesForCityStateZip(cityStateZipGuid);
			if (null != facilities && _facilities != facilities)
			{
				_facilities = facilities;
				RaisePropertyChanged("Facilities");
			}
		}
		#endregion


		#region Public Properties

		public Guid CityStateZipGuid
		{
			get { return _cityStateZipGuid; }
			set
			{
				_cityStateZipGuid = value;
				RaisePropertyChanged("CityStateZipGuid");
			}
		}

		public string City
		{
			get { return _city; }
			set
			{
				_city = value;
				RaisePropertyChanged("City");
			}
		}

		public string State
		{
			get { return _state; }
			set
			{
				_state = value;
				RaisePropertyChanged("State");
			}
		}

		public string ZipCode
		{
			get { return _zipCode; }
			set
			{
				_zipCode = value;
				RaisePropertyChanged("ZipCode");
			}
		}

		public FacilityCollection Facilities
		{
			get
			{
				if (null == _facilities)
				{
					try
					{
						this.GetAndSetFacilities(_cityStateZipGuid);
					}
					catch (Exception ex)
					{
						throw ex;
					}
				}
				return _facilities;
			}
			set
			{
				if ( != value)
				{
					_facilities = value;
					RaisePropertyChanged("Facilities");
				}
			}
		}

		public string PDC
		{
			get { return this.ToString(); }
			set { ; }
		}
		#endregion


		#region Overrides
		public override string ToString()
		{
			return City;
		}
		#endregion
	}
}