/*  Generated by CodeGen written by Concord Mfg.
 *  Transform file used: BEDataAccess (v0.1.0.0).xslt
 *  Date generated: 3/28/2012 12:46:17 PM
 *  CodeGen version: 0.1.0.0  */

using System;
using System.ComponentModel;
using ConcordMfg.PremierSeniorSolutions.Client.Tools;
using SP = ConcordMfg.PremierSeniorSolutions.WebService.Client;

namespace ConcordMfg.PremierSeniorSolutions.Client.ViewModels
{
	/// <summary>
	/// Access the data for the PaymentInfoAudit class.
	/// </summary>
	// [DataObject]
	public partial class DataAccess
	{
		#region Fields
		private static SP.PaymentInfoAuditSvc.PaymentInfoAuditClient _paymentInfoAuditClient =
			new SP.PaymentInfoAuditSvc.PaymentInfoAuditClient();
		#endregion


		#region Methods
		/// <summary>
		/// Retrieves PaymentInfoAudit from the web service.
		/// </summary>
		/// <returns>A list of all paymentInfoAudit.</returns>
		[DataObjectMethodAttribute(DataObjectMethodType.Select, true)]
		public static PaymentInfoAuditCollection GetPaymentInfoAudits()
		{
			// Call the service for data.
			SP.PaymentInfoAuditSvc.PaymentInfoAudit[] paymentInfoAudits = _paymentInfoAuditClient.GetAllPaymentInfoAudit();
			// Convert the service proxy object to a View Model object.
			PaymentInfoAuditCollection result = new PaymentInfoAuditCollection(paymentInfoAudits.ToViewModels());
			return result;
		}

		/// <summary>
		/// Retrieves PaymentInfoAudit from the web service.
		/// </summary>
		/// <returns>A list of all paymentInfoAudit.</returns>
		[DataObjectMethodAttribute(DataObjectMethodType.Select, true)]
		public static PaymentInfoAuditCollection GetPaymentInfoAuditsWithUndefined()
		{
			// Call the service for data.
			SP.PaymentInfoAuditSvc.PaymentInfoAudit[] paymentInfoAudits = _paymentInfoAuditClient.GetAllPaymentInfoAuditWithUndefined();
			// Convert the service proxy object to a View Model object.
			PaymentInfoAuditCollection result = new PaymentInfoAuditCollection(paymentInfoAudits.ToViewModels());
			return result;
		}

		/// <summary>
		/// Retrieves a PaymentInfoAudit from the web service.
		/// </summary>
		/// <param name="paymentInfoAuditGuidStr">The identifier of the PaymentInfoAudit to retrieve.</param>
		/// <returns>A PaymentInfoAudit.</returns>
		[DataObjectMethodAttribute(DataObjectMethodType.Select, false)]
		public static PaymentInfoAudit GetPaymentInfoAudit(string paymentInfoAuditGuidStr)
		{
			// Convert the string into a guid.
			Guid paymentInfoAuditGuid = new Guid(paymentInfoAuditGuidStr);
			// Call the sister method.
			return GetPaymentInfoAudit(paymentInfoAuditGuid);
		}

		/// <summary>
		/// Retrieves a PaymentInfoAudit from the web service.
		/// </summary>
		/// <param name="paymentInfoAuditGuid">The identifier of the PaymentInfoAudit to retrieve.</param>
		/// <returns>A PaymentInfoAudit.</returns>
		[DataObjectMethodAttribute(DataObjectMethodType.Select, false)]
		public static PaymentInfoAudit GetPaymentInfoAudit(Guid paymentInfoAuditGuid)
		{
			// Call the service for data.
			SP.PaymentInfoAuditSvc.PaymentInfoAudit paymentInfoAudit = _paymentInfoAuditClient.GetPaymentInfoAuditByPaymentInfoAuditGuid(paymentInfoAuditGuid);
			// Convert and return the service proxy object to a view model object.
			return paymentInfoAudit.ToViewModel();
		}

		/// <summary>
		/// Inserts PaymentInfoAudit through the web service.
		/// </summary>
		/// <param name="paymentInfoAudit">PaymentInfoAudit to insert.</param>
		/// <returns>1, if the insert was successful; otherwise, 0.</returns>
		[DataObjectMethodAttribute(DataObjectMethodType.Insert, true)]
		public static int InsertPaymentInfoAudit(PaymentInfoAuditViewModel paymentInfoAudit)
		{
			if (null == paymentInfoAudit)
			{
				throw new Exception("Cannot insert PaymentInfoAudit. The paymentInfoAudit object was null. Cannot be empty.");
			}

			try
			{
				// Convert the view model object to a service proxy object.
				SP.PaymentInfoAuditSvc.PaymentInfoAudit request = paymentInfoAudit.ToModel();

				// Call the service insert method.
				_paymentInfoAuditClient.InsertPaymentInfoAudit(request);

				return 1;
			}
			catch (System.ServiceModel.FaultException ex)
			{
				throw ex;
			}
			catch (Exception ex)
			{
				throw ex;
			}
		}

		[DataObjectMethod(DataObjectMethodType.Insert)]
		public static int InsertPaymentInfoAudit(Guid paymentInfoGuid, int paymentInfoID, string amazonToken, DateTime dateModified)
		{
			try 
			{
				// Create the service proxy object and populate it.
				SP.PaymentInfoAuditSvc.PaymentInfoAudit request = new SP.PaymentInfoAuditSvc.PaymentInfoAudit();

				request.PaymentInfoAuditGuid = Guid.Empty;
				request.PaymentInfoGuid = paymentInfoGuid;
				request.PaymentInfoID = paymentInfoID;
				request.AmazonToken = amazonToken;
				request.DateModified = dateModified;

				// Call the service insert method.
				_paymentInfoAuditClient.InsertPaymentInfoAudit(request);

				return 1;
			}
			catch (System.ServiceModel.FaultException ex)
			{
				throw ex;
			}
			catch (Exception ex)
			{
				throw ex;
			}
		}

		/// <summary>
		/// Updates PaymentInfoAudit through the web service.
		/// </summary>
		/// <param name="paymentInfoAudit">PaymentInfoAudit to update.</param>
		/// <returns>1, if the update was successful; otherwise, 0.</returns>
		[DataObjectMethodAttribute(DataObjectMethodType.Update, true)]
		public static int UpdatePaymentInfoAudit(PaymentInfoAuditViewModel paymentInfoAudit)
		{
			try
			{
				// Convert the view model object to a service proxy object.
				SP.PaymentInfoAuditSvc.PaymentInfoAudit request = paymentInfoAudit.ToModel();

				// Call the service update method.
				_paymentInfoAuditClient.UpdatePaymentInfoAudit(request);

				return 1;
			}
			catch (System.ServiceModel.FaultException ex)
			{
				throw ex;
			}
			catch (Exception ex)
			{
				throw ex;
			}
		}

		/// <summary>
		/// Deletes PaymentInfoAudit through the web service.
		/// </summary>
		/// <param name="paymentInfoAudit">PaymentInfoAudit to delete.</param>
		/// <returns>1, if the delete was successful; otherwise, 0.</returns>
		[DataObjectMethodAttribute(DataObjectMethodType.Delete, true)]
		public static int DeletePaymentInfoAudit(PaymentInfoAuditViewModel paymentInfoAudit)
		{
			try
			{
				// Convert the view model object to a service proxy object.
				SP.PaymentInfoAuditSvc.PaymentInfoAudit request = paymentInfoAudit.ToModel();

				// Call the service delete method.
				_paymentInfoAuditClient.DeletePaymentInfoAudit(request);

				return 1;
			}
			catch (System.ServiceModel.FaultException ex)
			{
				throw ex;
			}
			catch (Exception ex)
			{
				throw ex;
			}
		}
		#endregion


		#region PaymentInfoPaymentInfoAudit Methods
		/// <summary>
		/// Retrieves PaymentInfoAudit collection for a PaymentInfo from the web service.
		/// </summary>
		/// <param name="paymentInfoGuid">Payment Info Guid</param>
		/// <returns>PaymentInfoAudit collection for a paymentInfo.</returns>
		[DataObjectMethodAttribute(DataObjectMethodType.Select, false)]
		public static PaymentInfoAuditCollection GetPaymentInfoAuditsForPaymentInfoByPaymentInfoGuid(Guid paymentInfoGuid)
		{
			SP.PaymentInfoAuditSvc.PaymentInfoAudit[] paymentInfoAudits = _paymentInfoAuditClient.GetPaymentInfoAuditsForPaymentInfoByPaymentInfoGuid(paymentInfoGuid);
			PaymentInfoAuditCollection result = new PaymentInfoAuditCollection();
			foreach (SP.PaymentInfoAuditSvc.PaymentInfoAudit paymentInfoAudit
				in paymentInfoAudits)
			{
				PaymentInfoAuditViewModel viewModel = new PaymentInfoAuditViewModel(paymentInfoAudit.PaymentInfoAuditGuid, paymentInfoAudit.PaymentInfoGuid, paymentInfoAudit.PaymentInfoID, paymentInfoAudit.AmazonToken, paymentInfoAudit.DateModified);
				result.Add(viewModel);
			}
			return result;

		}
		#endregion

	}
}