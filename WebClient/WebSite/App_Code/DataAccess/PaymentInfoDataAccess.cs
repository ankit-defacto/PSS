/*  Generated by CodeGen written by Concord Mfg.
 *  Transform file used: BEDataAccess (v0.1.0.0).xslt
 *  Date generated: 3/28/2012 12:46:17 PM
 *  CodeGen version: 0.1.0.0  */

using System;
using System.ComponentModel;
using ConcordMfg.PremierSeniorSolutions.Client.Tools;
using SP = ConcordMfg.PremierSeniorSolutions.WebService.Client;

namespace ConcordMfg.PremierSeniorSolutions.Client.ViewModels
{
	/// <summary>
	/// Access the data for the PaymentInfo class.
	/// </summary>
	// [DataObject]
	public partial class DataAccess
	{
		#region Fields
		private static SP.PaymentInfoSvc.PaymentInfoClient _paymentInfoClient =
			new SP.PaymentInfoSvc.PaymentInfoClient();
		#endregion


		#region Methods
		/// <summary>
		/// Retrieves PaymentInfo from the web service.
		/// </summary>
		/// <returns>A list of all paymentInfo.</returns>
		[DataObjectMethodAttribute(DataObjectMethodType.Select, true)]
		public static PaymentInfoCollection GetPaymentInfos()
		{
			// Call the service for data.
			SP.PaymentInfoSvc.PaymentInfo[] paymentInfos = _paymentInfoClient.GetAllPaymentInfo();
			// Convert the service proxy object to a View Model object.
			PaymentInfoCollection result = new PaymentInfoCollection(paymentInfos.ToViewModels());
			return result;
		}

		/// <summary>
		/// Retrieves PaymentInfo from the web service.
		/// </summary>
		/// <returns>A list of all paymentInfo.</returns>
		[DataObjectMethodAttribute(DataObjectMethodType.Select, true)]
		public static PaymentInfoCollection GetPaymentInfosWithUndefined()
		{
			// Call the service for data.
			SP.PaymentInfoSvc.PaymentInfo[] paymentInfos = _paymentInfoClient.GetAllPaymentInfoWithUndefined();
			// Convert the service proxy object to a View Model object.
			PaymentInfoCollection result = new PaymentInfoCollection(paymentInfos.ToViewModels());
			return result;
		}

		/// <summary>
		/// Retrieves a PaymentInfo from the web service.
		/// </summary>
		/// <param name="paymentInfoGuidStr">The identifier of the PaymentInfo to retrieve.</param>
		/// <returns>A PaymentInfo.</returns>
		[DataObjectMethodAttribute(DataObjectMethodType.Select, false)]
		public static PaymentInfo GetPaymentInfo(string paymentInfoGuidStr)
		{
			// Convert the string into a guid.
			Guid paymentInfoGuid = new Guid(paymentInfoGuidStr);
			// Call the sister method.
			return GetPaymentInfo(paymentInfoGuid);
		}

		/// <summary>
		/// Retrieves a PaymentInfo from the web service.
		/// </summary>
		/// <param name="paymentInfoGuid">The identifier of the PaymentInfo to retrieve.</param>
		/// <returns>A PaymentInfo.</returns>
		[DataObjectMethodAttribute(DataObjectMethodType.Select, false)]
		public static PaymentInfo GetPaymentInfo(Guid paymentInfoGuid)
		{
			// Call the service for data.
			SP.PaymentInfoSvc.PaymentInfo paymentInfo = _paymentInfoClient.GetPaymentInfoByPaymentInfoGuid(paymentInfoGuid);
			// Convert and return the service proxy object to a view model object.
			return paymentInfo.ToViewModel();
		}

		/// <summary>
		/// Inserts PaymentInfo through the web service.
		/// </summary>
		/// <param name="paymentInfo">PaymentInfo to insert.</param>
		/// <returns>1, if the insert was successful; otherwise, 0.</returns>
		[DataObjectMethodAttribute(DataObjectMethodType.Insert, true)]
		public static int InsertPaymentInfo(PaymentInfoViewModel paymentInfo)
		{
			if (null == paymentInfo)
			{
				throw new Exception("Cannot insert PaymentInfo. The paymentInfo object was null. Cannot be empty.");
			}

			try
			{
				// Convert the view model object to a service proxy object.
				SP.PaymentInfoSvc.PaymentInfo request = paymentInfo.ToModel();

				// Call the service insert method.
				_paymentInfoClient.InsertPaymentInfo(request);

				return 1;
			}
			catch (System.ServiceModel.FaultException ex)
			{
				throw ex;
			}
			catch (Exception ex)
			{
				throw ex;
			}
		}

		[DataObjectMethod(DataObjectMethodType.Insert)]
		public static int InsertPaymentInfo(int paymentInfoID, string amazonToken)
		{
			try 
			{
				// Create the service proxy object and populate it.
				SP.PaymentInfoSvc.PaymentInfo request = new SP.PaymentInfoSvc.PaymentInfo();

				request.PaymentInfoGuid = Guid.Empty;
				request.PaymentInfoID = paymentInfoID;
				request.AmazonToken = amazonToken;

				// Call the service insert method.
				_paymentInfoClient.InsertPaymentInfo(request);

				return 1;
			}
			catch (System.ServiceModel.FaultException ex)
			{
				throw ex;
			}
			catch (Exception ex)
			{
				throw ex;
			}
		}

		/// <summary>
		/// Updates PaymentInfo through the web service.
		/// </summary>
		/// <param name="paymentInfo">PaymentInfo to update.</param>
		/// <returns>1, if the update was successful; otherwise, 0.</returns>
		[DataObjectMethodAttribute(DataObjectMethodType.Update, true)]
		public static int UpdatePaymentInfo(PaymentInfoViewModel paymentInfo)
		{
			try
			{
				// Convert the view model object to a service proxy object.
				SP.PaymentInfoSvc.PaymentInfo request = paymentInfo.ToModel();

				// Call the service update method.
				_paymentInfoClient.UpdatePaymentInfo(request);

				return 1;
			}
			catch (System.ServiceModel.FaultException ex)
			{
				throw ex;
			}
			catch (Exception ex)
			{
				throw ex;
			}
		}

		/// <summary>
		/// Deletes PaymentInfo through the web service.
		/// </summary>
		/// <param name="paymentInfo">PaymentInfo to delete.</param>
		/// <returns>1, if the delete was successful; otherwise, 0.</returns>
		[DataObjectMethodAttribute(DataObjectMethodType.Delete, true)]
		public static int DeletePaymentInfo(PaymentInfoViewModel paymentInfo)
		{
			try
			{
				// Convert the view model object to a service proxy object.
				SP.PaymentInfoSvc.PaymentInfo request = paymentInfo.ToModel();

				// Call the service delete method.
				_paymentInfoClient.DeletePaymentInfo(request);

				return 1;
			}
			catch (System.ServiceModel.FaultException ex)
			{
				throw ex;
			}
			catch (Exception ex)
			{
				throw ex;
			}
		}
		#endregion

	}
}