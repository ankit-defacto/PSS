/*  Generated by CodeGen written by Concord Mfg.
 *  Transform file used: BEServiceReference (v0.1.0.0).xslt
 *  Date generated: 3/28/2012 12:46:19 PM
 *  CodeGen version: 0.1.0.0  */

using System;
using System.Runtime.Serialization;


namespace ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc
{
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
	[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://ConcordMfg.PremierSeniorSolutions.WebService.DataContracts/2007/01")]
	[System.SerializableAttribute()]
	public partial class FacilityOffering : object, System.Runtime.Serialization.IExtensibleDataObject
	{
		[System.NonSerializedAttribute()]
		private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
		
		private Guid _facilityGuid = Guid.Empty;
		private Guid _offeringGuid = Guid.Empty;
		private bool _isChecked = false;
		
		public System.Runtime.Serialization.ExtensionDataObject ExtensionData
		{
			get
			{
				return this.extensionDataField;
			}
			set
			{
				this.extensionDataField = value;
			}
		}
		
		[System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 0)]
		public Guid FacilityGuid
		{
			get { return _facilityGuid; }
			set { _facilityGuid = value; }
		}
	
		[System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 1)]
		public Guid OfferingGuid
		{
			get { return _offeringGuid; }
			set { _offeringGuid = value; }
		}
	
		[System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 2)]
		public bool IsChecked
		{
			get { return _isChecked; }
			set { _isChecked = value; }
		}
	
	}
	
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
	[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts/2007/01")]
	[System.SerializableAttribute()]
	public partial class FacilityOfferingFault : object, System.Runtime.Serialization.IExtensibleDataObject
	{
		[System.NonSerializedAttribute()]
		private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
		private string _errorMessage;
		
		private Guid _facilityGuid = Guid.Empty;
		private Guid _offeringGuid = Guid.Empty;
		public System.Runtime.Serialization.ExtensionDataObject ExtensionData
		{
			get
			{
				return this.extensionDataField;
			}
			set
			{
				this.extensionDataField = value;
			}
		}
		
		[System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
		public string ErrorMessage
		{
			get
			{
				return this._errorMessage;
			}
			set
			{
				this._errorMessage = value;
			}
		}

		[System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
		public Guid FacilityGuid
		{
			get { return _facilityGuid; }
			set { _facilityGuid = value; }
		}
	
		[System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
		public Guid OfferingGuid
		{
			get { return _offeringGuid; }
			set { _offeringGuid = value; }
		}
	
	}
	

	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
	[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://ConcordMfg.PremierSeniorSolutions.WebService.DataContracts/2007/01")]
	[System.SerializableAttribute()]
	public partial class DefaultFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject
	{
		[System.NonSerializedAttribute()]
		private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

		private int ErrorIdField;

		private string ErrorMessageField;

		private System.Guid CorrelationIdField;

		public System.Runtime.Serialization.ExtensionDataObject ExtensionData
		{
			get
			{
				return this.extensionDataField;
			}
			set
			{
				this.extensionDataField = value;
			}
		}

		[System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
		public int ErrorId
		{
			get
			{
				return this.ErrorIdField;
			}
			set
			{
				this.ErrorIdField = value;
			}
		}

		[System.Runtime.Serialization.DataMemberAttribute(IsRequired = true)]
		public string ErrorMessage
		{
			get
			{
				return this.ErrorMessageField;
			}
			set
			{
				this.ErrorMessageField = value;
			}
		}

		[System.Runtime.Serialization.DataMemberAttribute(IsRequired = true, Order = 2)]
		public System.Guid CorrelationId
		{
			get
			{
				return this.CorrelationIdField;
			}
			set
			{
				this.CorrelationIdField = value;
			}
		}
	}
	


	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
	[System.ServiceModel.ServiceContractAttribute(Namespace = "http://ConcordMfg.PremierSeniorSolutions.WebService.ServiceContracts/2007/01", ConfigurationName = "ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.IFacilityOffering")]
	public interface IFacilityOffering
	{
		[System.ServiceModel.OperationContractAttribute(Action = "GetFacilityOfferingByFacilityGuidOfferingGuid",
			ReplyAction = "http://ConcordMfg.PremierSeniorSolutions.WebService.ServiceContracts/2007/01/IFacilityOffering/GetFacilityOfferingByFacilityGuidOfferingGuidResponse")]
		[System.ServiceModel.FaultContractAttribute(typeof(ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.FacilityOfferingFault),
			Action = "http://ConcordMfg.PremierSeniorSolutions.WebService.ServiceContracts/2007/01/IFacilityOffering/GetFacilityOfferingByFacilityGuidOfferingGuidFacilityOfferingFault",
			Name = "FacilityOfferingFault", Namespace = "http://ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts/2007/01")]
		ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.FacilityOffering GetFacilityOfferingByFacilityGuidOfferingGuid(Guid facilityGuid, Guid offeringGuid);

		[System.ServiceModel.OperationContractAttribute(Action = "GetAllFacilityOffering",
			ReplyAction = "http://ConcordMfg.PremierSeniorSolutions.WebService.ServiceContracts/2007/01/IFacilityOffering/GetAllFacilityOfferingResponse")]
		[System.ServiceModel.FaultContractAttribute(typeof(ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.DefaultFaultContract),
			Action = "http://ConcordMfg.PremierSeniorSolutions.WebService.ServiceContracts/2007/01/IFacilityOffering/GetAllFacilityOfferingDefaultFaultContract",
			Name = "DefaultFaultContract", Namespace = "http://ConcordMfg.PremierSeniorSolutions.WebService.DataContracts/2007/01")]
		ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.FacilityOffering[] GetAllFacilityOffering();

		[System.ServiceModel.OperationContractAttribute(Action = "InsertFacilityOffering",
			ReplyAction = "http://ConcordMfg.PremierSeniorSolutions.WebService.ServiceContracts/2007/01/IFacilityOffering/InsertFacilityOfferingResponse")]
		[System.ServiceModel.FaultContractAttribute(typeof(ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.DefaultFaultContract),
			Action = "http://ConcordMfg.PremierSeniorSolutions.WebService.ServiceContracts/2007/01/IFacilityOffering/InsertFacilityOfferingDefaultFaultContract",
			Name = "DefaultFaultContract", Namespace = "http://ConcordMfg.PremierSeniorSolutions.WebService.DataContracts/2007/01")]
		void InsertFacilityOffering(ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.FacilityOffering facilityOffering);

		[System.ServiceModel.OperationContractAttribute(Action = "DeleteFacilityOffering",
			ReplyAction = "http://ConcordMfg.PremierSeniorSolutions.WebService.ServiceContracts/2007/01/IFacilityOffering/DeleteFacilityOfferingResponse")]
		[System.ServiceModel.FaultContractAttribute(typeof(ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.DefaultFaultContract),
			Action = "http://ConcordMfg.PremierSeniorSolutions.WebService.ServiceContracts/2007/01/IFacilityOffering/DeleteFacilityOfferingDefaultFaultContract",
			Name = "DefaultFaultContract", Namespace = "http://ConcordMfg.PremierSeniorSolutions.WebService.DataContracts/2007/01")]
		void DeleteFacilityOffering(ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.FacilityOffering facilityOffering);

		[System.ServiceModel.OperationContractAttribute(Action = "UpdateFacilityOffering",
			ReplyAction = "http://ConcordMfg.PremierSeniorSolutions.WebService.ServiceContracts/2007/01/IFacilityOffering/UpdateFacilityOfferingResponse")]
		[System.ServiceModel.FaultContractAttribute(typeof(ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.DefaultFaultContract),
			Action = "http://ConcordMfg.PremierSeniorSolutions.WebService.ServiceContracts/2007/01/IFacilityOffering/UpdateFacilityOfferingDefaultFaultContract",
			Name = "DefaultFaultContract", Namespace = "http://ConcordMfg.PremierSeniorSolutions.WebService.DataContracts/2007/01")]
		void UpdateFacilityOffering(ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.FacilityOffering facilityOffering);

	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
	public interface IFacilityOfferingChannel : ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.IFacilityOffering, System.ServiceModel.IClientChannel
	{
	}

	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
	public partial class FacilityOfferingClient : System.ServiceModel.ClientBase<ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.IFacilityOffering>, ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.IFacilityOffering
	{
		public FacilityOfferingClient()
		{
		}

		public FacilityOfferingClient(string endpointConfigurationName)
			: base(endpointConfigurationName)
		{
		}

		public FacilityOfferingClient(string endpointConfigurationName, string remoteAddress)
			: base(endpointConfigurationName, remoteAddress)
		{
		}

		public FacilityOfferingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress)
			: base(endpointConfigurationName, remoteAddress)
		{
		}

		public FacilityOfferingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress)
			: base(binding, remoteAddress)
		{
		}

		public ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.FacilityOffering GetFacilityOfferingByFacilityGuidOfferingGuid(Guid facilityGuid, Guid offeringGuid)
		{
			return base.Channel.GetFacilityOfferingByFacilityGuidOfferingGuid(facilityGuid, offeringGuid);
		}

		public ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.FacilityOffering[] GetAllFacilityOffering()
		{
			return base.Channel.GetAllFacilityOffering();
		}

		public void InsertFacilityOffering(ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.FacilityOffering facilityOffering)
		{
			base.Channel.InsertFacilityOffering(facilityOffering);
		}

		public void DeleteFacilityOffering(ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.FacilityOffering facilityOffering)
		{
			base.Channel.DeleteFacilityOffering(facilityOffering);
		}

		public void UpdateFacilityOffering(ConcordMfg.PremierSeniorSolutions.WebService.Client.FacilityOfferingSvc.FacilityOffering facilityOffering)
		{
			base.Channel.UpdateFacilityOffering(facilityOffering);
		}

	}
}
	