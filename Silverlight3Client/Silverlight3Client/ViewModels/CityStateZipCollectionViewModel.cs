/*  Generated by CodeGen written by Concord Mfg
 *  Transform file used: BEViewModelCollection (v0.1.0.0).xslt
 *  Date generated: 3/28/2012 12:46:37 PM
 *  CodeGen version: 0.1.0.0  */

using System;
using System.Collections.ObjectModel;

namespace ConcordMfg.PremierSeniorSolutions.Client.ViewModels
{
	public class CityStateZipViewModelCollection : NotifyPropertyChangedBase
		{
		public CityStateZipViewModelCollection()
		{
			this.LoadAllCityStateZips();
		}

		public void LoadAllCityStateZips()
		{
			Data.Repository respository = new Data.Repository();

			try
			{
				ObservableCollection<CityStateZip> cityStateZips = respository.GetAllCityStateZips();
			}
			catch (Exception ex)
			{
				throw ex;
			}

			try
			{
				this.CityStateZips = cityStateZips.ToViewModels();
			}
			catch (Exception ex)
			{
				throw ex;
			}
		}

		public void AddCityStateZip(CityStateZipViewModel cityStateZip)
		{
			_cityStateZipVMs.Add(cityStateZip);
		}

		public void RemoveCityStateZip(CityStateZipViewModel cityStateZip)
		{
			_cityStateZipVMs.Remove(cityStateZip);
		}

		public ObservableCollection<CityStateZipViewModel> CityStateZips
		{
			get { return _cityStateZipVMs; }
			private set
			{
				_cityStateZipVMs = value;
				RaisePropertyChanged("CityStateZips");
			}
		}

		private ObservableCollection<CityStateZipViewModel> _cityStateZipVMs = new ObservableCollection<CityStateZipViewModel>();
	}
}