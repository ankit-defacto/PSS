/*	Generated by CodeGen written by Concord Mfg
 *  Transform file used: BEViewModel (v0.1.0.0).xslt
 *  Date generated: 3/28/2012 12:46:36 PM
 *  CodeGen version: 0.1.0.0  */

using System;
using System.Collections.Generic;
using ConcordMfg.PremierSeniorSolutions.Client.Models;


namespace ConcordMfg.PremierSeniorSolutions.Client.ViewModels
{
	/// <summary>
	/// View Model for Click (Click).
	/// </summary>
	public class ClickViewModel : NotifyPropertyChangedBaseWithOwner
	{
		#region Private Fields
		protected Guid _clickGuid = Guid.Empty;
		protected Guid _facilityGuid = Guid.Empty;
		protected Guid _listingTypeGuid = Guid.Empty;
		protected DateTime _timeStamp = default(DateTime);

		private string _facilityGuid_Facility_FacilityName = null;
		private string _listingTypeGuid_ListingType_ListingTypeName = null;

		private FacilityViewModel _facilityGuid_Facility = null;
		private ListingTypeViewModel _listingTypeGuid_ListingType = null;
		#endregion


		#region Constructors
		public ClickViewModel()
		{
		}

		public ClickViewModel(Guid clickGuid, Guid facilityGuid, Guid listingTypeGuid, DateTime timeStamp)
		{
			this.ClickGuid = clickGuid;
			this.FacilityGuid = facilityGuid;
			this.ListingTypeGuid = listingTypeGuid;
			this.TimeStamp = timeStamp;
		}
		#endregion


		#region Private GetAndSet Methods

		private void GetAndSetFacilityGuid_Facility(Guid facilityGuid)
		{
			if (Guid.Empty != facilityGuid &&
				(null == _facilityGuid_Facility || _facilityGuid_Facility.FacilityGuid != facilityGuid))
			{
				try
				{
					this.FacilityGuid_Facility = DataAccess.GetFacility(facilityGuid);
					this.FacilityGuid_Facility_FacilityName = _facilityGuid_Facility.FacilityName;
				}
				catch (Exception ex)
				{
					throw ex;
				}
			}
		}

		private void GetAndSetListingTypeGuid_ListingType(Guid listingTypeGuid)
		{
			if (Guid.Empty != listingTypeGuid &&
				(null == _listingTypeGuid_ListingType || _listingTypeGuid_ListingType.ListingTypeGuid != listingTypeGuid))
			{
				try
				{
					this.ListingTypeGuid_ListingType = DataAccess.GetListingType(listingTypeGuid);
					this.ListingTypeGuid_ListingType_ListingTypeName = _listingTypeGuid_ListingType.ListingTypeName;
				}
				catch (Exception ex)
				{
					throw ex;
				}
			}
		}
		#endregion


		#region Public Properties

		public Guid ClickGuid
		{
			get { return _clickGuid; }
			set
			{
				_clickGuid = value;
				RaisePropertyChanged("ClickGuid");
			}
		}

		public Guid FacilityGuid
		{
			get { return _facilityGuid; }
			set
			{
				_facilityGuid = value;
				RaisePropertyChanged("FacilityGuid");
				this.GetAndSetFacilityGuid_Facility(value);
			}
		}

		public Guid ListingTypeGuid
		{
			get { return _listingTypeGuid; }
			set
			{
				_listingTypeGuid = value;
				RaisePropertyChanged("ListingTypeGuid");
				this.GetAndSetListingTypeGuid_ListingType(value);
			}
		}

		public DateTime TimeStamp
		{
			get { return _timeStamp; }
			set
			{
				_timeStamp = value;
				RaisePropertyChanged("TimeStamp");
			}
		}

		public string FacilityGuid_Facility_FacilityName
		{
			get
			{ return _facilityGuid_Facility_FacilityName; }
			set
			{
				if (Guid.Empty != value)
				{
					_facilityGuid_Facility_FacilityName = value;
					RaisePropertyChanged("FacilityGuid_Facility_FacilityName");
				}
			}
		}

		public string ListingTypeGuid_ListingType_ListingTypeName
		{
			get
			{ return _listingTypeGuid_ListingType_ListingTypeName; }
			set
			{
				if (Guid.Empty != value)
				{
					_listingTypeGuid_ListingType_ListingTypeName = value;
					RaisePropertyChanged("ListingTypeGuid_ListingType_ListingTypeName");
				}
			}
		}

		/// <summary>
		/// Gets and sets Facility related through FacilityGuid.
		/// </summary>
		public FacilityViewModel FacilityGuid_Facility
		{
			get
			{
				if (Guid.Empty != _facilityGuid && null == _facilityGuid_Facility)
				{ this.GetAndSetFacilityGuid_Facility(_facilityGuid); }
				return _facilityGuid_Facility;
			}
			set
			{
				if (Guid.Empty != value)
				{
					_facilityGuid_Facility = value;
					RaisePropertyChanged("FacilityGuid_Facility");
				}
			}
		}

		public string FacilityGuidPDC
		{
			get
			{
				if (null == this.FacilityGuid_Facility || this.FacilityGuid == Guid.Empty)
					return "*Unassigned*";
				return this.FacilityGuid_Facility.PDC;
			}
			set { ; }
		}

		/// <summary>
		/// Gets and sets Listing Type related through ListingTypeGuid.
		/// </summary>
		public ListingTypeViewModel ListingTypeGuid_ListingType
		{
			get
			{
				if (Guid.Empty != _listingTypeGuid && null == _listingTypeGuid_ListingType)
				{ this.GetAndSetListingTypeGuid_ListingType(_listingTypeGuid); }
				return _listingTypeGuid_ListingType;
			}
			set
			{
				if (Guid.Empty != value)
				{
					_listingTypeGuid_ListingType = value;
					RaisePropertyChanged("ListingTypeGuid_ListingType");
				}
			}
		}

		public string ListingTypeGuidPDC
		{
			get
			{
				if (null == this.ListingTypeGuid_ListingType || this.ListingTypeGuid == Guid.Empty)
					return "*Unassigned*";
				return this.ListingTypeGuid_ListingType.PDC;
			}
			set { ; }
		}

		public string PDC
		{
			get { return this.ToString(); }
			set { ; }
		}
		#endregion


		#region Overrides
		public override string ToString()
		{
			return ClickGuid.ToString();
		}
		#endregion
	}
}