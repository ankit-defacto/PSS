/*  Generated by CodeGen written by Concord Mfg
 *  Transform file used: BEViewModelCollection (v0.1.0.0).xslt
 *  Date generated: 3/28/2012 12:46:37 PM
 *  CodeGen version: 0.1.0.0  */

using System;
using System.Collections.ObjectModel;

namespace ConcordMfg.PremierSeniorSolutions.Client.ViewModels
{
	public class ClientAuditViewModelCollection : NotifyPropertyChangedBase
		{
		public ClientAuditViewModelCollection()
		{
			this.LoadAllClientAudits();
		}

		public void LoadAllClientAudits()
		{
			Data.Repository respository = new Data.Repository();

			try
			{
				ObservableCollection<ClientAudit> clientAudits = respository.GetAllClientAudits();
			}
			catch (Exception ex)
			{
				throw ex;
			}

			try
			{
				this.ClientAudits = clientAudits.ToViewModels();
			}
			catch (Exception ex)
			{
				throw ex;
			}
		}

		public void AddClientAudit(ClientAuditViewModel clientAudit)
		{
			_clientAuditVMs.Add(clientAudit);
		}

		public void RemoveClientAudit(ClientAuditViewModel clientAudit)
		{
			_clientAuditVMs.Remove(clientAudit);
		}

		public ObservableCollection<ClientAuditViewModel> ClientAudits
		{
			get { return _clientAuditVMs; }
			private set
			{
				_clientAuditVMs = value;
				RaisePropertyChanged("ClientAudits");
			}
		}

		private ObservableCollection<ClientAuditViewModel> _clientAuditVMs = new ObservableCollection<ClientAuditViewModel>();
	}
}