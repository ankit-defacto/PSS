/*  Generated by CodeGen written by Concord Mfg
 *  Transform file used: BEViewModelCollection (v0.1.0.0).xslt
 *  Date generated: 3/28/2012 12:46:37 PM
 *  CodeGen version: 0.1.0.0  */

using System;
using System.Collections.ObjectModel;

namespace ConcordMfg.PremierSeniorSolutions.Client.ViewModels
{
	public class FacilityOfferingViewModelCollection : NotifyPropertyChangedBase
		{
		public FacilityOfferingViewModelCollection()
		{
			this.LoadAllFacilityOfferings();
		}

		public void LoadAllFacilityOfferings()
		{
			Data.Repository respository = new Data.Repository();

			try
			{
				ObservableCollection<FacilityOffering> facilityOfferings = respository.GetAllFacilityOfferings();
			}
			catch (Exception ex)
			{
				throw ex;
			}

			try
			{
				this.FacilityOfferings = facilityOfferings.ToViewModels();
			}
			catch (Exception ex)
			{
				throw ex;
			}
		}

		public void AddFacilityOffering(FacilityOfferingViewModel facilityOffering)
		{
			_facilityOfferingVMs.Add(facilityOffering);
		}

		public void RemoveFacilityOffering(FacilityOfferingViewModel facilityOffering)
		{
			_facilityOfferingVMs.Remove(facilityOffering);
		}

		public ObservableCollection<FacilityOfferingViewModel> FacilityOfferings
		{
			get { return _facilityOfferingVMs; }
			private set
			{
				_facilityOfferingVMs = value;
				RaisePropertyChanged("FacilityOfferings");
			}
		}

		private ObservableCollection<FacilityOfferingViewModel> _facilityOfferingVMs = new ObservableCollection<FacilityOfferingViewModel>();
	}
}