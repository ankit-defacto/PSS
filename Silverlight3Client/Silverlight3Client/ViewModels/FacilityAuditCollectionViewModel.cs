/*  Generated by CodeGen written by Concord Mfg
 *  Transform file used: BEViewModelCollection (v0.1.0.0).xslt
 *  Date generated: 3/28/2012 12:46:37 PM
 *  CodeGen version: 0.1.0.0  */

using System;
using System.Collections.ObjectModel;

namespace ConcordMfg.PremierSeniorSolutions.Client.ViewModels
{
	public class FacilityAuditViewModelCollection : NotifyPropertyChangedBase
		{
		public FacilityAuditViewModelCollection()
		{
			this.LoadAllFacilityAudits();
		}

		public void LoadAllFacilityAudits()
		{
			Data.Repository respository = new Data.Repository();

			try
			{
				ObservableCollection<FacilityAudit> facilityAudits = respository.GetAllFacilityAudits();
			}
			catch (Exception ex)
			{
				throw ex;
			}

			try
			{
				this.FacilityAudits = facilityAudits.ToViewModels();
			}
			catch (Exception ex)
			{
				throw ex;
			}
		}

		public void AddFacilityAudit(FacilityAuditViewModel facilityAudit)
		{
			_facilityAuditVMs.Add(facilityAudit);
		}

		public void RemoveFacilityAudit(FacilityAuditViewModel facilityAudit)
		{
			_facilityAuditVMs.Remove(facilityAudit);
		}

		public ObservableCollection<FacilityAuditViewModel> FacilityAudits
		{
			get { return _facilityAuditVMs; }
			private set
			{
				_facilityAuditVMs = value;
				RaisePropertyChanged("FacilityAudits");
			}
		}

		private ObservableCollection<FacilityAuditViewModel> _facilityAuditVMs = new ObservableCollection<FacilityAuditViewModel>();
	}
}