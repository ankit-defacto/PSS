/*  Generated by CodeGen written by Concord Mfg
	*  Transform file used: ViewModelAssembler (v0.1.0.0).xslt
	*  Date generated: 3/28/2012 12:46:37 PM
	*  CodeGen version: 0.1.0.0  */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using ConcordMfg.PremierSeniorSolutions.Silverlight3Client.Models;

namespace ConcordMfg.PremierSeniorSolutions.Silverlight3Client.ViewModels
{
	public static class Assembler
	{

		#region CityStateZip
		public static CityStateZipViewModel ToViewModel(this CityStateZip model)
		{
			CityStateZipViewModel result = new CityStateZipViewModel();


			result.CityStateZipGuid = model.CityStateZipGuid;
			result.City = model.City;
			result.State = model.State;
			result.ZipCode = model.ZipCode;

			return result;
		}

		public static ObservableCollection<CityStateZipViewModel> ToViewModels(this IEnumerable<CityStateZip> models)
		{
			ObservableCollection<CityStateZipViewModel> result = new ObservableCollection<CityStateZipViewModel>();

			foreach (CityStateZip model in models)
			{
				result.Add(model.ToViewModel());
			}

			return result;
		}
		#endregion
		#region Click
		public static ClickViewModel ToViewModel(this Click model)
		{
			ClickViewModel result = new ClickViewModel();


			result.ClickGuid = model.ClickGuid;
			result.FacilityGuid = model.FacilityGuid;
			result.ListingTypeGuid = model.ListingTypeGuid;
			result.TimeStamp = model.TimeStamp.ToShortDateString();

			return result;
		}

		public static ObservableCollection<ClickViewModel> ToViewModels(this IEnumerable<Click> models)
		{
			ObservableCollection<ClickViewModel> result = new ObservableCollection<ClickViewModel>();

			foreach (Click model in models)
			{
				result.Add(model.ToViewModel());
			}

			return result;
		}
		#endregion
		#region Client
		public static ClientViewModel ToViewModel(this Client model)
		{
			ClientViewModel result = new ClientViewModel();


			result.ClientGuid = model.ClientGuid;
			result.ClientID = model.ClientID;
			result.ClientName = model.ClientName;
			result.PhoneNumber = model.PhoneNumber;
			result.Email = model.Email;
			result.Address = model.Address;
			result.CityStateZipGuid = model.CityStateZipGuid;
			result.PaymentInfoGuid = model.PaymentInfoGuid;
			result.FederatedID = model.FederatedID;
			result.FederatedKey = model.FederatedKey;
			result.FederatedIDProvider = model.FederatedIDProvider;
			result.Username = model.Username;
			result.HashedPassword = model.HashedPassword;

			return result;
		}

		public static ObservableCollection<ClientViewModel> ToViewModels(this IEnumerable<Client> models)
		{
			ObservableCollection<ClientViewModel> result = new ObservableCollection<ClientViewModel>();

			foreach (Client model in models)
			{
				result.Add(model.ToViewModel());
			}

			return result;
		}
		#endregion
		#region ClientAudit
		public static ClientAuditViewModel ToViewModel(this ClientAudit model)
		{
			ClientAuditViewModel result = new ClientAuditViewModel();


			result.ClientAuditGuid = model.ClientAuditGuid;
			result.ClientGuid = model.ClientGuid;
			result.ClientID = model.ClientID;
			result.ClientName = model.ClientName;
			result.PhoneNumber = model.PhoneNumber;
			result.Email = model.Email;
			result.Address = model.Address;
			result.CityStateZipGuid = model.CityStateZipGuid;
			result.PaymentInfoGuid = model.PaymentInfoGuid;
			result.FederatedID = model.FederatedID;
			result.FederatedKey = model.FederatedKey;
			result.FederatedIDProvider = model.FederatedIDProvider;
			result.Username = model.Username;
			result.HashedPassword = model.HashedPassword;
			result.DateModified = model.DateModified.ToShortDateString();

			return result;
		}

		public static ObservableCollection<ClientAuditViewModel> ToViewModels(this IEnumerable<ClientAudit> models)
		{
			ObservableCollection<ClientAuditViewModel> result = new ObservableCollection<ClientAuditViewModel>();

			foreach (ClientAudit model in models)
			{
				result.Add(model.ToViewModel());
			}

			return result;
		}
		#endregion
		#region Facility
		public static FacilityViewModel ToViewModel(this Facility model)
		{
			FacilityViewModel result = new FacilityViewModel();


			result.FacilityGuid = model.FacilityGuid;
			result.FacilityID = model.FacilityID;
			result.FacilityName = model.FacilityName;
			result.Exerpt = model.Exerpt;
			result.Description = model.Description;
			result.Address = model.Address;
			result.CityStateZipGuid = model.CityStateZipGuid;
			result.PhoneNumber = model.PhoneNumber;
			result.Email = model.Email;
			result.Website = model.Website;
			result.ClientGuid = model.ClientGuid;
			result.ListingTypeGuid = model.ListingTypeGuid;
			result.PublicPhotoFileUri = model.PublicPhotoFileUri;

			return result;
		}

		public static ObservableCollection<FacilityViewModel> ToViewModels(this IEnumerable<Facility> models)
		{
			ObservableCollection<FacilityViewModel> result = new ObservableCollection<FacilityViewModel>();

			foreach (Facility model in models)
			{
				result.Add(model.ToViewModel());
			}

			return result;
		}
		#endregion
		#region FacilityAudit
		public static FacilityAuditViewModel ToViewModel(this FacilityAudit model)
		{
			FacilityAuditViewModel result = new FacilityAuditViewModel();


			result.FacilityAuditGuid = model.FacilityAuditGuid;
			result.FacilityGuid = model.FacilityGuid;
			result.FacilityID = model.FacilityID;
			result.FacilityName = model.FacilityName;
			result.Exerpt = model.Exerpt;
			result.Description = model.Description;
			result.Address = model.Address;
			result.CityStateZipGuid = model.CityStateZipGuid;
			result.PhoneNumber = model.PhoneNumber;
			result.Email = model.Email;
			result.Website = model.Website;
			result.ClientGuid = model.ClientGuid;
			result.ListingTypeGuid = model.ListingTypeGuid;
			result.PublicPhotoFileUri = model.PublicPhotoFileUri;
			result.DateModified = model.DateModified.ToShortDateString();

			return result;
		}

		public static ObservableCollection<FacilityAuditViewModel> ToViewModels(this IEnumerable<FacilityAudit> models)
		{
			ObservableCollection<FacilityAuditViewModel> result = new ObservableCollection<FacilityAuditViewModel>();

			foreach (FacilityAudit model in models)
			{
				result.Add(model.ToViewModel());
			}

			return result;
		}
		#endregion
		#region FacilityLocationCriteria
		public static FacilityLocationCriteriaViewModel ToViewModel(this FacilityLocationCriteria model)
		{
			FacilityLocationCriteriaViewModel result = new FacilityLocationCriteriaViewModel();


			result.FacilityGuid = model.FacilityGuid;
			result.CityStateZipGuid = model.CityStateZipGuid;

			return result;
		}

		public static ObservableCollection<FacilityLocationCriteriaViewModel> ToViewModels(this IEnumerable<FacilityLocationCriteria> models)
		{
			ObservableCollection<FacilityLocationCriteriaViewModel> result = new ObservableCollection<FacilityLocationCriteriaViewModel>();

			foreach (FacilityLocationCriteria model in models)
			{
				result.Add(model.ToViewModel());
			}

			return result;
		}
		#endregion
		#region FacilityOffering
		public static FacilityOfferingViewModel ToViewModel(this FacilityOffering model)
		{
			FacilityOfferingViewModel result = new FacilityOfferingViewModel();


			result.FacilityGuid = model.FacilityGuid;
			result.OfferingGuid = model.OfferingGuid;
			result.IsChecked = model.IsChecked;

			return result;
		}

		public static ObservableCollection<FacilityOfferingViewModel> ToViewModels(this IEnumerable<FacilityOffering> models)
		{
			ObservableCollection<FacilityOfferingViewModel> result = new ObservableCollection<FacilityOfferingViewModel>();

			foreach (FacilityOffering model in models)
			{
				result.Add(model.ToViewModel());
			}

			return result;
		}
		#endregion
		#region ListingType
		public static ListingTypeViewModel ToViewModel(this ListingType model)
		{
			ListingTypeViewModel result = new ListingTypeViewModel();


			result.ListingTypeGuid = model.ListingTypeGuid;
			result.ListingTypeName = model.ListingTypeName;

			return result;
		}

		public static ObservableCollection<ListingTypeViewModel> ToViewModels(this IEnumerable<ListingType> models)
		{
			ObservableCollection<ListingTypeViewModel> result = new ObservableCollection<ListingTypeViewModel>();

			foreach (ListingType model in models)
			{
				result.Add(model.ToViewModel());
			}

			return result;
		}
		#endregion
		#region Offering
		public static OfferingViewModel ToViewModel(this Offering model)
		{
			OfferingViewModel result = new OfferingViewModel();


			result.OfferingGuid = model.OfferingGuid;
			result.OfferingID = model.OfferingID;
			result.OfferingName = model.OfferingName;

			return result;
		}

		public static ObservableCollection<OfferingViewModel> ToViewModels(this IEnumerable<Offering> models)
		{
			ObservableCollection<OfferingViewModel> result = new ObservableCollection<OfferingViewModel>();

			foreach (Offering model in models)
			{
				result.Add(model.ToViewModel());
			}

			return result;
		}
		#endregion
		#region PaymentInfo
		public static PaymentInfoViewModel ToViewModel(this PaymentInfo model)
		{
			PaymentInfoViewModel result = new PaymentInfoViewModel();


			result.PaymentInfoGuid = model.PaymentInfoGuid;
			result.PaymentInfoID = model.PaymentInfoID;
			result.AmazonToken = model.AmazonToken;

			return result;
		}

		public static ObservableCollection<PaymentInfoViewModel> ToViewModels(this IEnumerable<PaymentInfo> models)
		{
			ObservableCollection<PaymentInfoViewModel> result = new ObservableCollection<PaymentInfoViewModel>();

			foreach (PaymentInfo model in models)
			{
				result.Add(model.ToViewModel());
			}

			return result;
		}
		#endregion
		#region PaymentInfoAudit
		public static PaymentInfoAuditViewModel ToViewModel(this PaymentInfoAudit model)
		{
			PaymentInfoAuditViewModel result = new PaymentInfoAuditViewModel();


			result.PaymentInfoAuditGuid = model.PaymentInfoAuditGuid;
			result.PaymentInfoGuid = model.PaymentInfoGuid;
			result.PaymentInfoID = model.PaymentInfoID;
			result.AmazonToken = model.AmazonToken;
			result.DateModified = model.DateModified.ToShortDateString();

			return result;
		}

		public static ObservableCollection<PaymentInfoAuditViewModel> ToViewModels(this IEnumerable<PaymentInfoAudit> models)
		{
			ObservableCollection<PaymentInfoAuditViewModel> result = new ObservableCollection<PaymentInfoAuditViewModel>();

			foreach (PaymentInfoAudit model in models)
			{
				result.Add(model.ToViewModel());
			}

			return result;
		}
		#endregion
		#region FacilityPhoto
		public static FacilityPhotoViewModel ToViewModel(this FacilityPhoto model)
		{
			FacilityPhotoViewModel result = new FacilityPhotoViewModel();


			result.FacilityPhotoGuid = model.FacilityPhotoGuid;
			result.PhotoUri = model.PhotoUri;
			result.FacilityGuid = model.FacilityGuid;

			return result;
		}

		public static ObservableCollection<FacilityPhotoViewModel> ToViewModels(this IEnumerable<FacilityPhoto> models)
		{
			ObservableCollection<FacilityPhotoViewModel> result = new ObservableCollection<FacilityPhotoViewModel>();

			foreach (FacilityPhoto model in models)
			{
				result.Add(model.ToViewModel());
			}

			return result;
		}
		#endregion
	}
}
	