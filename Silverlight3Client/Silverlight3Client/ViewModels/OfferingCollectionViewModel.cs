/*  Generated by CodeGen written by Concord Mfg
 *  Transform file used: BEViewModelCollection (v0.1.0.0).xslt
 *  Date generated: 3/28/2012 12:46:37 PM
 *  CodeGen version: 0.1.0.0  */

using System;
using System.Collections.ObjectModel;

namespace ConcordMfg.PremierSeniorSolutions.Client.ViewModels
{
	public class OfferingViewModelCollection : NotifyPropertyChangedBase
		{
		public OfferingViewModelCollection()
		{
			this.LoadAllOfferings();
		}

		public void LoadAllOfferings()
		{
			Data.Repository respository = new Data.Repository();

			try
			{
				ObservableCollection<Offering> offerings = respository.GetAllOfferings();
			}
			catch (Exception ex)
			{
				throw ex;
			}

			try
			{
				this.Offerings = offerings.ToViewModels();
			}
			catch (Exception ex)
			{
				throw ex;
			}
		}

		public void AddOffering(OfferingViewModel offering)
		{
			_offeringVMs.Add(offering);
		}

		public void RemoveOffering(OfferingViewModel offering)
		{
			_offeringVMs.Remove(offering);
		}

		public ObservableCollection<OfferingViewModel> Offerings
		{
			get { return _offeringVMs; }
			private set
			{
				_offeringVMs = value;
				RaisePropertyChanged("Offerings");
			}
		}

		private ObservableCollection<OfferingViewModel> _offeringVMs = new ObservableCollection<OfferingViewModel>();
	}
}