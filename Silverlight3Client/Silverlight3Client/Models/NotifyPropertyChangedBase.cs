/*  Generated by CodeGen written by Concord Mfg
	*  Transform file used: NotifyPropertyChangedBase (v0.1.0.0).xslt
	*  Date generated: 3/28/2012 12:46:36 PM
	*  CodeGen version: 0.1.0.0  */

using System;
using System.ComponentModel;

namespace ConcordMfg.PremierSeniorSolutions.Client.ViewModels
{
	public class NotifyPropertyChangedBase : INotifyPropertyChanged
	{
		protected void RaisePropertyChanged(string propertyName)
		{
			if (this.PropertyChanged == null)return;
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}


		#region INotifyPropertyChanged Members
		public event PropertyChangedEventHandler PropertyChanged;
		#endregion
	}

	public class NotifyPropertyChangedBaseWithOwner : NotifyPropertyChangedBase
	{
		private System.Collections.IEnumerable _owner = null;

		public System.Collections.IEnumerable Owner
		{
			get { return _owner; }
			set { _owner = value; }
		}
	}
}