#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConcordMfg.PremierSeniorSolutions.WebService.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PSS2012")]
	public partial class PSS2012DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCityStateZip(CityStateZip instance);
    partial void UpdateCityStateZip(CityStateZip instance);
    partial void DeleteCityStateZip(CityStateZip instance);
    partial void InsertClick(Click instance);
    partial void UpdateClick(Click instance);
    partial void DeleteClick(Click instance);
    partial void InsertFacilityLocationCriteria(FacilityLocationCriteria instance);
    partial void UpdateFacilityLocationCriteria(FacilityLocationCriteria instance);
    partial void DeleteFacilityLocationCriteria(FacilityLocationCriteria instance);
    partial void InsertFacilityOffering(FacilityOffering instance);
    partial void UpdateFacilityOffering(FacilityOffering instance);
    partial void DeleteFacilityOffering(FacilityOffering instance);
    partial void InsertListingType(ListingType instance);
    partial void UpdateListingType(ListingType instance);
    partial void DeleteListingType(ListingType instance);
    partial void InsertOffering(Offering instance);
    partial void UpdateOffering(Offering instance);
    partial void DeleteOffering(Offering instance);
    partial void InsertPaymentInfo(PaymentInfo instance);
    partial void UpdatePaymentInfo(PaymentInfo instance);
    partial void DeletePaymentInfo(PaymentInfo instance);
    partial void InsertPaymentInfoAudit(PaymentInfoAudit instance);
    partial void UpdatePaymentInfoAudit(PaymentInfoAudit instance);
    partial void DeletePaymentInfoAudit(PaymentInfoAudit instance);
    partial void InsertFacilityPhoto(FacilityPhoto instance);
    partial void UpdateFacilityPhoto(FacilityPhoto instance);
    partial void DeleteFacilityPhoto(FacilityPhoto instance);
    partial void InsertClientCardInfo(ClientCardInfo instance);
    partial void UpdateClientCardInfo(ClientCardInfo instance);
    partial void DeleteClientCardInfo(ClientCardInfo instance);
    partial void InsertFacility(Facility instance);
    partial void UpdateFacility(Facility instance);
    partial void DeleteFacility(Facility instance);
    partial void InsertFacilityAudit(FacilityAudit instance);
    partial void UpdateFacilityAudit(FacilityAudit instance);
    partial void DeleteFacilityAudit(FacilityAudit instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertClientAudit(ClientAudit instance);
    partial void UpdateClientAudit(ClientAudit instance);
    partial void DeleteClientAudit(ClientAudit instance);
    #endregion
		
		public PSS2012DataContext() : 
				base(global::ConcordMfg.PremierSeniorSolutions.WebService.DataAccess.Properties.Settings.Default.PSS2012ConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public PSS2012DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PSS2012DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PSS2012DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PSS2012DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CityStateZip> CityStateZips
		{
			get
			{
				return this.GetTable<CityStateZip>();
			}
		}
		
		public System.Data.Linq.Table<Click> Clicks
		{
			get
			{
				return this.GetTable<Click>();
			}
		}
		
		public System.Data.Linq.Table<FacilityLocationCriteria> FacilityLocationCriterias
		{
			get
			{
				return this.GetTable<FacilityLocationCriteria>();
			}
		}
		
		public System.Data.Linq.Table<FacilityOffering> FacilityOfferings
		{
			get
			{
				return this.GetTable<FacilityOffering>();
			}
		}
		
		public System.Data.Linq.Table<ListingType> ListingTypes
		{
			get
			{
				return this.GetTable<ListingType>();
			}
		}
		
		public System.Data.Linq.Table<Offering> Offerings
		{
			get
			{
				return this.GetTable<Offering>();
			}
		}
		
		public System.Data.Linq.Table<PaymentInfo> PaymentInfos
		{
			get
			{
				return this.GetTable<PaymentInfo>();
			}
		}
		
		public System.Data.Linq.Table<PaymentInfoAudit> PaymentInfoAudits
		{
			get
			{
				return this.GetTable<PaymentInfoAudit>();
			}
		}
		
		public System.Data.Linq.Table<FacilityPhoto> FacilityPhotos
		{
			get
			{
				return this.GetTable<FacilityPhoto>();
			}
		}
		
		public System.Data.Linq.Table<ClientCardInfo> ClientCardInfos
		{
			get
			{
				return this.GetTable<ClientCardInfo>();
			}
		}
		
		public System.Data.Linq.Table<Facility> Facilities
		{
			get
			{
				return this.GetTable<Facility>();
			}
		}
		
		public System.Data.Linq.Table<FacilityAudit> FacilityAudits
		{
			get
			{
				return this.GetTable<FacilityAudit>();
			}
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<ClientAudit> ClientAudits
		{
			get
			{
				return this.GetTable<ClientAudit>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ufn_Haversine", IsComposable=true)]
		public System.Nullable<double> ufn_Haversine([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> lat1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> long1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> lat2, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> long2)
		{
			return ((System.Nullable<double>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lat1, long1, lat2, long2).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CityStateZip")]
	public partial class CityStateZip : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CityStateZipGuid;
		
		private string _City;
		
		private string _State;
		
		private string _ZipCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityStateZipGuidChanging(System.Guid value);
    partial void OnCityStateZipGuidChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    #endregion
		
		public CityStateZip()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityStateZipGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CityStateZipGuid
		{
			get
			{
				return this._CityStateZipGuid;
			}
			set
			{
				if ((this._CityStateZipGuid != value))
				{
					this.OnCityStateZipGuidChanging(value);
					this.SendPropertyChanging();
					this._CityStateZipGuid = value;
					this.SendPropertyChanged("CityStateZipGuid");
					this.OnCityStateZipGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Click")]
	public partial class Click : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ClickGuid;
		
		private System.Guid _FacilityGuid;
		
		private System.Guid _ListingTypeGuid;
		
		private System.DateTime _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClickGuidChanging(System.Guid value);
    partial void OnClickGuidChanged();
    partial void OnFacilityGuidChanging(System.Guid value);
    partial void OnFacilityGuidChanged();
    partial void OnListingTypeGuidChanging(System.Guid value);
    partial void OnListingTypeGuidChanged();
    partial void OnTimeStampChanging(System.DateTime value);
    partial void OnTimeStampChanged();
    #endregion
		
		public Click()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClickGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ClickGuid
		{
			get
			{
				return this._ClickGuid;
			}
			set
			{
				if ((this._ClickGuid != value))
				{
					this.OnClickGuidChanging(value);
					this.SendPropertyChanging();
					this._ClickGuid = value;
					this.SendPropertyChanged("ClickGuid");
					this.OnClickGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FacilityGuid
		{
			get
			{
				return this._FacilityGuid;
			}
			set
			{
				if ((this._FacilityGuid != value))
				{
					this.OnFacilityGuidChanging(value);
					this.SendPropertyChanging();
					this._FacilityGuid = value;
					this.SendPropertyChanged("FacilityGuid");
					this.OnFacilityGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListingTypeGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ListingTypeGuid
		{
			get
			{
				return this._ListingTypeGuid;
			}
			set
			{
				if ((this._ListingTypeGuid != value))
				{
					this.OnListingTypeGuidChanging(value);
					this.SendPropertyChanging();
					this._ListingTypeGuid = value;
					this.SendPropertyChanged("ListingTypeGuid");
					this.OnListingTypeGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FacilityLocationCriteria")]
	public partial class FacilityLocationCriteria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FacilityGuid;
		
		private System.Guid _CityStateZipGuid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFacilityGuidChanging(System.Guid value);
    partial void OnFacilityGuidChanged();
    partial void OnCityStateZipGuidChanging(System.Guid value);
    partial void OnCityStateZipGuidChanged();
    #endregion
		
		public FacilityLocationCriteria()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FacilityGuid
		{
			get
			{
				return this._FacilityGuid;
			}
			set
			{
				if ((this._FacilityGuid != value))
				{
					this.OnFacilityGuidChanging(value);
					this.SendPropertyChanging();
					this._FacilityGuid = value;
					this.SendPropertyChanged("FacilityGuid");
					this.OnFacilityGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityStateZipGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CityStateZipGuid
		{
			get
			{
				return this._CityStateZipGuid;
			}
			set
			{
				if ((this._CityStateZipGuid != value))
				{
					this.OnCityStateZipGuidChanging(value);
					this.SendPropertyChanging();
					this._CityStateZipGuid = value;
					this.SendPropertyChanged("CityStateZipGuid");
					this.OnCityStateZipGuidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FacilityOffering")]
	public partial class FacilityOffering : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FacilityGuid;
		
		private System.Guid _OfferingGuid;
		
		private bool _IsChecked;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFacilityGuidChanging(System.Guid value);
    partial void OnFacilityGuidChanged();
    partial void OnOfferingGuidChanging(System.Guid value);
    partial void OnOfferingGuidChanged();
    partial void OnIsCheckedChanging(bool value);
    partial void OnIsCheckedChanged();
    #endregion
		
		public FacilityOffering()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FacilityGuid
		{
			get
			{
				return this._FacilityGuid;
			}
			set
			{
				if ((this._FacilityGuid != value))
				{
					this.OnFacilityGuidChanging(value);
					this.SendPropertyChanging();
					this._FacilityGuid = value;
					this.SendPropertyChanged("FacilityGuid");
					this.OnFacilityGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferingGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OfferingGuid
		{
			get
			{
				return this._OfferingGuid;
			}
			set
			{
				if ((this._OfferingGuid != value))
				{
					this.OnOfferingGuidChanging(value);
					this.SendPropertyChanging();
					this._OfferingGuid = value;
					this.SendPropertyChanged("OfferingGuid");
					this.OnOfferingGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChecked", DbType="bit NOT NULL")]
		public bool IsChecked
		{
			get
			{
				return this._IsChecked;
			}
			set
			{
				if ((this._IsChecked != value))
				{
					this.OnIsCheckedChanging(value);
					this.SendPropertyChanging();
					this._IsChecked = value;
					this.SendPropertyChanged("IsChecked");
					this.OnIsCheckedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ListingType")]
	public partial class ListingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ListingTypeGuid;
		
		private string _ListingTypeName;
		
		private decimal _ListingTypePrice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnListingTypeGuidChanging(System.Guid value);
    partial void OnListingTypeGuidChanged();
    partial void OnListingTypeNameChanging(string value);
    partial void OnListingTypeNameChanged();
    partial void OnListingTypePriceChanging(decimal value);
    partial void OnListingTypePriceChanged();
    #endregion
		
		public ListingType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListingTypeGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ListingTypeGuid
		{
			get
			{
				return this._ListingTypeGuid;
			}
			set
			{
				if ((this._ListingTypeGuid != value))
				{
					this.OnListingTypeGuidChanging(value);
					this.SendPropertyChanging();
					this._ListingTypeGuid = value;
					this.SendPropertyChanged("ListingTypeGuid");
					this.OnListingTypeGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListingTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ListingTypeName
		{
			get
			{
				return this._ListingTypeName;
			}
			set
			{
				if ((this._ListingTypeName != value))
				{
					this.OnListingTypeNameChanging(value);
					this.SendPropertyChanging();
					this._ListingTypeName = value;
					this.SendPropertyChanged("ListingTypeName");
					this.OnListingTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListingTypePrice", DbType="Decimal(18,2)")]
		public decimal ListingTypePrice
		{
			get
			{
				return this._ListingTypePrice;
			}
			set
			{
				if ((this._ListingTypePrice != value))
				{
					this.OnListingTypePriceChanging(value);
					this.SendPropertyChanging();
					this._ListingTypePrice = value;
					this.SendPropertyChanged("ListingTypePrice");
					this.OnListingTypePriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Offering")]
	public partial class Offering : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OfferingGuid;
		
		private int _OfferingID;
		
		private string _OfferingName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfferingGuidChanging(System.Guid value);
    partial void OnOfferingGuidChanged();
    partial void OnOfferingIDChanging(int value);
    partial void OnOfferingIDChanged();
    partial void OnOfferingNameChanging(string value);
    partial void OnOfferingNameChanged();
    #endregion
		
		public Offering()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferingGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OfferingGuid
		{
			get
			{
				return this._OfferingGuid;
			}
			set
			{
				if ((this._OfferingGuid != value))
				{
					this.OnOfferingGuidChanging(value);
					this.SendPropertyChanging();
					this._OfferingGuid = value;
					this.SendPropertyChanged("OfferingGuid");
					this.OnOfferingGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferingID", AutoSync=AutoSync.Always, DbType="Int NOT NULL", IsDbGenerated=true)]
		public int OfferingID
		{
			get
			{
				return this._OfferingID;
			}
			set
			{
				if ((this._OfferingID != value))
				{
					this.OnOfferingIDChanging(value);
					this.SendPropertyChanging();
					this._OfferingID = value;
					this.SendPropertyChanged("OfferingID");
					this.OnOfferingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferingName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OfferingName
		{
			get
			{
				return this._OfferingName;
			}
			set
			{
				if ((this._OfferingName != value))
				{
					this.OnOfferingNameChanging(value);
					this.SendPropertyChanging();
					this._OfferingName = value;
					this.SendPropertyChanged("OfferingName");
					this.OnOfferingNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentInfo")]
	public partial class PaymentInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PaymentInfoGuid;
		
		private int _PaymentInfoID;
		
		private string _AmazonToken;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentInfoGuidChanging(System.Guid value);
    partial void OnPaymentInfoGuidChanged();
    partial void OnPaymentInfoIDChanging(int value);
    partial void OnPaymentInfoIDChanged();
    partial void OnAmazonTokenChanging(string value);
    partial void OnAmazonTokenChanged();
    #endregion
		
		public PaymentInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentInfoGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PaymentInfoGuid
		{
			get
			{
				return this._PaymentInfoGuid;
			}
			set
			{
				if ((this._PaymentInfoGuid != value))
				{
					this.OnPaymentInfoGuidChanging(value);
					this.SendPropertyChanging();
					this._PaymentInfoGuid = value;
					this.SendPropertyChanged("PaymentInfoGuid");
					this.OnPaymentInfoGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentInfoID", AutoSync=AutoSync.Always, DbType="Int NOT NULL", IsDbGenerated=true)]
		public int PaymentInfoID
		{
			get
			{
				return this._PaymentInfoID;
			}
			set
			{
				if ((this._PaymentInfoID != value))
				{
					this.OnPaymentInfoIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentInfoID = value;
					this.SendPropertyChanged("PaymentInfoID");
					this.OnPaymentInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmazonToken", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AmazonToken
		{
			get
			{
				return this._AmazonToken;
			}
			set
			{
				if ((this._AmazonToken != value))
				{
					this.OnAmazonTokenChanging(value);
					this.SendPropertyChanging();
					this._AmazonToken = value;
					this.SendPropertyChanged("AmazonToken");
					this.OnAmazonTokenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentInfoAudit")]
	public partial class PaymentInfoAudit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PaymentInfoAuditGuid;
		
		private System.Guid _PaymentInfoGuid;
		
		private int _PaymentInfoID;
		
		private string _AmazonToken;
		
		private System.DateTime _DateModified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentInfoAuditGuidChanging(System.Guid value);
    partial void OnPaymentInfoAuditGuidChanged();
    partial void OnPaymentInfoGuidChanging(System.Guid value);
    partial void OnPaymentInfoGuidChanged();
    partial void OnPaymentInfoIDChanging(int value);
    partial void OnPaymentInfoIDChanged();
    partial void OnAmazonTokenChanging(string value);
    partial void OnAmazonTokenChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public PaymentInfoAudit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentInfoAuditGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PaymentInfoAuditGuid
		{
			get
			{
				return this._PaymentInfoAuditGuid;
			}
			set
			{
				if ((this._PaymentInfoAuditGuid != value))
				{
					this.OnPaymentInfoAuditGuidChanging(value);
					this.SendPropertyChanging();
					this._PaymentInfoAuditGuid = value;
					this.SendPropertyChanged("PaymentInfoAuditGuid");
					this.OnPaymentInfoAuditGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentInfoGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PaymentInfoGuid
		{
			get
			{
				return this._PaymentInfoGuid;
			}
			set
			{
				if ((this._PaymentInfoGuid != value))
				{
					this.OnPaymentInfoGuidChanging(value);
					this.SendPropertyChanging();
					this._PaymentInfoGuid = value;
					this.SendPropertyChanged("PaymentInfoGuid");
					this.OnPaymentInfoGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentInfoID", DbType="Int NOT NULL")]
		public int PaymentInfoID
		{
			get
			{
				return this._PaymentInfoID;
			}
			set
			{
				if ((this._PaymentInfoID != value))
				{
					this.OnPaymentInfoIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentInfoID = value;
					this.SendPropertyChanged("PaymentInfoID");
					this.OnPaymentInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmazonToken", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AmazonToken
		{
			get
			{
				return this._AmazonToken;
			}
			set
			{
				if ((this._AmazonToken != value))
				{
					this.OnAmazonTokenChanging(value);
					this.SendPropertyChanging();
					this._AmazonToken = value;
					this.SendPropertyChanged("AmazonToken");
					this.OnAmazonTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FacilityPhoto")]
	public partial class FacilityPhoto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FacilityPhotoGuid;
		
		private string _PhotoUri;
		
		private System.Guid _FacilityGuid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFacilityPhotoGuidChanging(System.Guid value);
    partial void OnFacilityPhotoGuidChanged();
    partial void OnPhotoUriChanging(string value);
    partial void OnPhotoUriChanged();
    partial void OnFacilityGuidChanging(System.Guid value);
    partial void OnFacilityGuidChanged();
    #endregion
		
		public FacilityPhoto()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityPhotoGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FacilityPhotoGuid
		{
			get
			{
				return this._FacilityPhotoGuid;
			}
			set
			{
				if ((this._FacilityPhotoGuid != value))
				{
					this.OnFacilityPhotoGuidChanging(value);
					this.SendPropertyChanging();
					this._FacilityPhotoGuid = value;
					this.SendPropertyChanged("FacilityPhotoGuid");
					this.OnFacilityPhotoGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUri", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string PhotoUri
		{
			get
			{
				return this._PhotoUri;
			}
			set
			{
				if ((this._PhotoUri != value))
				{
					this.OnPhotoUriChanging(value);
					this.SendPropertyChanging();
					this._PhotoUri = value;
					this.SendPropertyChanged("PhotoUri");
					this.OnPhotoUriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FacilityGuid
		{
			get
			{
				return this._FacilityGuid;
			}
			set
			{
				if ((this._FacilityGuid != value))
				{
					this.OnFacilityGuidChanging(value);
					this.SendPropertyChanging();
					this._FacilityGuid = value;
					this.SendPropertyChanged("FacilityGuid");
					this.OnFacilityGuidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientCardInfo")]
	public partial class ClientCardInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ClientCardGuid;
		
		private System.Guid _ClientGuid;
		
		private string _Cardtype;
		
		private string _CardHolderNameOnCard;
		
		private string _CardNumber;
		
		private string _CvvNumber;
		
		private short _ExpMonth;
		
		private short _ExpYear;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientCardGuidChanging(System.Guid value);
    partial void OnClientCardGuidChanged();
    partial void OnClientGuidChanging(System.Guid value);
    partial void OnClientGuidChanged();
    partial void OnCardtypeChanging(string value);
    partial void OnCardtypeChanged();
    partial void OnCardHolderNameOnCardChanging(string value);
    partial void OnCardHolderNameOnCardChanged();
    partial void OnCardNumberChanging(string value);
    partial void OnCardNumberChanged();
    partial void OnCvvNumberChanging(string value);
    partial void OnCvvNumberChanged();
    partial void OnExpMonthChanging(short value);
    partial void OnExpMonthChanged();
    partial void OnExpYearChanging(short value);
    partial void OnExpYearChanged();
    #endregion
		
		public ClientCardInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCardGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ClientCardGuid
		{
			get
			{
				return this._ClientCardGuid;
			}
			set
			{
				if ((this._ClientCardGuid != value))
				{
					this.OnClientCardGuidChanging(value);
					this.SendPropertyChanging();
					this._ClientCardGuid = value;
					this.SendPropertyChanged("ClientCardGuid");
					this.OnClientCardGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ClientGuid
		{
			get
			{
				return this._ClientGuid;
			}
			set
			{
				if ((this._ClientGuid != value))
				{
					this.OnClientGuidChanging(value);
					this.SendPropertyChanging();
					this._ClientGuid = value;
					this.SendPropertyChanged("ClientGuid");
					this.OnClientGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cardtype", DbType="VarChar(100)")]
		public string Cardtype
		{
			get
			{
				return this._Cardtype;
			}
			set
			{
				if ((this._Cardtype != value))
				{
					this.OnCardtypeChanging(value);
					this.SendPropertyChanging();
					this._Cardtype = value;
					this.SendPropertyChanged("Cardtype");
					this.OnCardtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardHolderNameOnCard", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string CardHolderNameOnCard
		{
			get
			{
				return this._CardHolderNameOnCard;
			}
			set
			{
				if ((this._CardHolderNameOnCard != value))
				{
					this.OnCardHolderNameOnCardChanging(value);
					this.SendPropertyChanging();
					this._CardHolderNameOnCard = value;
					this.SendPropertyChanged("CardHolderNameOnCard");
					this.OnCardHolderNameOnCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNumber", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string CardNumber
		{
			get
			{
				return this._CardNumber;
			}
			set
			{
				if ((this._CardNumber != value))
				{
					this.OnCardNumberChanging(value);
					this.SendPropertyChanging();
					this._CardNumber = value;
					this.SendPropertyChanged("CardNumber");
					this.OnCardNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CvvNumber", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string CvvNumber
		{
			get
			{
				return this._CvvNumber;
			}
			set
			{
				if ((this._CvvNumber != value))
				{
					this.OnCvvNumberChanging(value);
					this.SendPropertyChanging();
					this._CvvNumber = value;
					this.SendPropertyChanged("CvvNumber");
					this.OnCvvNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpMonth", DbType="SmallInt NOT NULL")]
		public short ExpMonth
		{
			get
			{
				return this._ExpMonth;
			}
			set
			{
				if ((this._ExpMonth != value))
				{
					this.OnExpMonthChanging(value);
					this.SendPropertyChanging();
					this._ExpMonth = value;
					this.SendPropertyChanged("ExpMonth");
					this.OnExpMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpYear", DbType="SmallInt NOT NULL")]
		public short ExpYear
		{
			get
			{
				return this._ExpYear;
			}
			set
			{
				if ((this._ExpYear != value))
				{
					this.OnExpYearChanging(value);
					this.SendPropertyChanging();
					this._ExpYear = value;
					this.SendPropertyChanged("ExpYear");
					this.OnExpYearChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Facility")]
	public partial class Facility : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FacilityGuid;
		
		private int _FacilityID;
		
		private string _FacilityName;
		
		private string _Exerpt;
		
		private string _Description;
		
		private string _Address;
		
		private System.Guid _CityStateZipGuid;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _Website;
		
		private System.Guid _ClientGuid;
		
		private System.Guid _ListingTypeGuid;
		
		private string _PublicPhotoFileUri;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private decimal _Price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFacilityGuidChanging(System.Guid value);
    partial void OnFacilityGuidChanged();
    partial void OnFacilityIDChanging(int value);
    partial void OnFacilityIDChanged();
    partial void OnFacilityNameChanging(string value);
    partial void OnFacilityNameChanged();
    partial void OnExerptChanging(string value);
    partial void OnExerptChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityStateZipGuidChanging(System.Guid value);
    partial void OnCityStateZipGuidChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnClientGuidChanging(System.Guid value);
    partial void OnClientGuidChanged();
    partial void OnListingTypeGuidChanging(System.Guid value);
    partial void OnListingTypeGuidChanged();
    partial void OnPublicPhotoFileUriChanging(string value);
    partial void OnPublicPhotoFileUriChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
		
		public Facility()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FacilityGuid
		{
			get
			{
				return this._FacilityGuid;
			}
			set
			{
				if ((this._FacilityGuid != value))
				{
					this.OnFacilityGuidChanging(value);
					this.SendPropertyChanging();
					this._FacilityGuid = value;
					this.SendPropertyChanged("FacilityGuid");
					this.OnFacilityGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int FacilityID
		{
			get
			{
				return this._FacilityID;
			}
			set
			{
				if ((this._FacilityID != value))
				{
					this.OnFacilityIDChanging(value);
					this.SendPropertyChanging();
					this._FacilityID = value;
					this.SendPropertyChanged("FacilityID");
					this.OnFacilityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FacilityName
		{
			get
			{
				return this._FacilityName;
			}
			set
			{
				if ((this._FacilityName != value))
				{
					this.OnFacilityNameChanging(value);
					this.SendPropertyChanging();
					this._FacilityName = value;
					this.SendPropertyChanged("FacilityName");
					this.OnFacilityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exerpt", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Exerpt
		{
			get
			{
				return this._Exerpt;
			}
			set
			{
				if ((this._Exerpt != value))
				{
					this.OnExerptChanging(value);
					this.SendPropertyChanging();
					this._Exerpt = value;
					this.SendPropertyChanged("Exerpt");
					this.OnExerptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityStateZipGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CityStateZipGuid
		{
			get
			{
				return this._CityStateZipGuid;
			}
			set
			{
				if ((this._CityStateZipGuid != value))
				{
					this.OnCityStateZipGuidChanging(value);
					this.SendPropertyChanging();
					this._CityStateZipGuid = value;
					this.SendPropertyChanged("CityStateZipGuid");
					this.OnCityStateZipGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ClientGuid
		{
			get
			{
				return this._ClientGuid;
			}
			set
			{
				if ((this._ClientGuid != value))
				{
					this.OnClientGuidChanging(value);
					this.SendPropertyChanging();
					this._ClientGuid = value;
					this.SendPropertyChanged("ClientGuid");
					this.OnClientGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListingTypeGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ListingTypeGuid
		{
			get
			{
				return this._ListingTypeGuid;
			}
			set
			{
				if ((this._ListingTypeGuid != value))
				{
					this.OnListingTypeGuidChanging(value);
					this.SendPropertyChanging();
					this._ListingTypeGuid = value;
					this.SendPropertyChanged("ListingTypeGuid");
					this.OnListingTypeGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicPhotoFileUri", DbType="VarChar(200)")]
		public string PublicPhotoFileUri
		{
			get
			{
				return this._PublicPhotoFileUri;
			}
			set
			{
				if ((this._PublicPhotoFileUri != value))
				{
					this.OnPublicPhotoFileUriChanging(value);
					this.SendPropertyChanging();
					this._PublicPhotoFileUri = value;
					this.SendPropertyChanged("PublicPhotoFileUri");
					this.OnPublicPhotoFileUriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(8,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FacilityAudit")]
	public partial class FacilityAudit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FacilityAuditGuid;
		
		private System.Guid _FacilityGuid;
		
		private int _FacilityID;
		
		private string _FacilityName;
		
		private string _Exerpt;
		
		private string _Description;
		
		private string _Address;
		
		private System.Guid _CityStateZipGuid;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _Website;
		
		private System.Guid _ClientGuid;
		
		private System.Guid _ListingTypeGuid;
		
		private string _PublicPhotoFileUri;
		
		private System.DateTime _DateModified;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private decimal _Price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFacilityAuditGuidChanging(System.Guid value);
    partial void OnFacilityAuditGuidChanged();
    partial void OnFacilityGuidChanging(System.Guid value);
    partial void OnFacilityGuidChanged();
    partial void OnFacilityIDChanging(int value);
    partial void OnFacilityIDChanged();
    partial void OnFacilityNameChanging(string value);
    partial void OnFacilityNameChanged();
    partial void OnExerptChanging(string value);
    partial void OnExerptChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityStateZipGuidChanging(System.Guid value);
    partial void OnCityStateZipGuidChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnClientGuidChanging(System.Guid value);
    partial void OnClientGuidChanged();
    partial void OnListingTypeGuidChanging(System.Guid value);
    partial void OnListingTypeGuidChanged();
    partial void OnPublicPhotoFileUriChanging(string value);
    partial void OnPublicPhotoFileUriChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
		
		public FacilityAudit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityAuditGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FacilityAuditGuid
		{
			get
			{
				return this._FacilityAuditGuid;
			}
			set
			{
				if ((this._FacilityAuditGuid != value))
				{
					this.OnFacilityAuditGuidChanging(value);
					this.SendPropertyChanging();
					this._FacilityAuditGuid = value;
					this.SendPropertyChanged("FacilityAuditGuid");
					this.OnFacilityAuditGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FacilityGuid
		{
			get
			{
				return this._FacilityGuid;
			}
			set
			{
				if ((this._FacilityGuid != value))
				{
					this.OnFacilityGuidChanging(value);
					this.SendPropertyChanging();
					this._FacilityGuid = value;
					this.SendPropertyChanged("FacilityGuid");
					this.OnFacilityGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityID", DbType="Int NOT NULL")]
		public int FacilityID
		{
			get
			{
				return this._FacilityID;
			}
			set
			{
				if ((this._FacilityID != value))
				{
					this.OnFacilityIDChanging(value);
					this.SendPropertyChanging();
					this._FacilityID = value;
					this.SendPropertyChanged("FacilityID");
					this.OnFacilityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FacilityName
		{
			get
			{
				return this._FacilityName;
			}
			set
			{
				if ((this._FacilityName != value))
				{
					this.OnFacilityNameChanging(value);
					this.SendPropertyChanging();
					this._FacilityName = value;
					this.SendPropertyChanged("FacilityName");
					this.OnFacilityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exerpt", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Exerpt
		{
			get
			{
				return this._Exerpt;
			}
			set
			{
				if ((this._Exerpt != value))
				{
					this.OnExerptChanging(value);
					this.SendPropertyChanging();
					this._Exerpt = value;
					this.SendPropertyChanged("Exerpt");
					this.OnExerptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityStateZipGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CityStateZipGuid
		{
			get
			{
				return this._CityStateZipGuid;
			}
			set
			{
				if ((this._CityStateZipGuid != value))
				{
					this.OnCityStateZipGuidChanging(value);
					this.SendPropertyChanging();
					this._CityStateZipGuid = value;
					this.SendPropertyChanged("CityStateZipGuid");
					this.OnCityStateZipGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ClientGuid
		{
			get
			{
				return this._ClientGuid;
			}
			set
			{
				if ((this._ClientGuid != value))
				{
					this.OnClientGuidChanging(value);
					this.SendPropertyChanging();
					this._ClientGuid = value;
					this.SendPropertyChanged("ClientGuid");
					this.OnClientGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListingTypeGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ListingTypeGuid
		{
			get
			{
				return this._ListingTypeGuid;
			}
			set
			{
				if ((this._ListingTypeGuid != value))
				{
					this.OnListingTypeGuidChanging(value);
					this.SendPropertyChanging();
					this._ListingTypeGuid = value;
					this.SendPropertyChanged("ListingTypeGuid");
					this.OnListingTypeGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicPhotoFileUri", DbType="VarChar(200)")]
		public string PublicPhotoFileUri
		{
			get
			{
				return this._PublicPhotoFileUri;
			}
			set
			{
				if ((this._PublicPhotoFileUri != value))
				{
					this.OnPublicPhotoFileUriChanging(value);
					this.SendPropertyChanging();
					this._PublicPhotoFileUri = value;
					this.SendPropertyChanged("PublicPhotoFileUri");
					this.OnPublicPhotoFileUriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(8,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ClientGuid;
		
		private int _ClientID;
		
		private string _ClientName;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _Address;
		
		private System.Guid _CityStateZipGuid;
		
		private System.Guid _PaymentInfoGuid;
		
		private string _FederatedID;
		
		private string _FederatedKey;
		
		private string _FederatedIDProvider;
		
		private string _Username;
		
		private string _HashedPassword;
		
		private bool _AccountPaused;
		
		private bool _IsWaiverd;
		
		private int _FreeDays;
		
		private decimal _Credits;
		
		private bool _IsSuspended;
		
		private bool _IsFlagged;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientGuidChanging(System.Guid value);
    partial void OnClientGuidChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityStateZipGuidChanging(System.Guid value);
    partial void OnCityStateZipGuidChanged();
    partial void OnPaymentInfoGuidChanging(System.Guid value);
    partial void OnPaymentInfoGuidChanged();
    partial void OnFederatedIDChanging(string value);
    partial void OnFederatedIDChanged();
    partial void OnFederatedKeyChanging(string value);
    partial void OnFederatedKeyChanged();
    partial void OnFederatedIDProviderChanging(string value);
    partial void OnFederatedIDProviderChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnHashedPasswordChanging(string value);
    partial void OnHashedPasswordChanged();
    partial void OnAccountPausedChanging(bool value);
    partial void OnAccountPausedChanged();
    partial void OnIsWaiverdChanging(bool value);
    partial void OnIsWaiverdChanged();
    partial void OnFreeDaysChanging(int value);
    partial void OnFreeDaysChanged();
    partial void OnCreditsChanging(decimal value);
    partial void OnCreditsChanged();
    partial void OnIsSuspendedChanging(bool value);
    partial void OnIsSuspendedChanged();
    partial void OnIsFlaggedChanging(bool value);
    partial void OnIsFlaggedChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Client()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ClientGuid
		{
			get
			{
				return this._ClientGuid;
			}
			set
			{
				if ((this._ClientGuid != value))
				{
					this.OnClientGuidChanging(value);
					this.SendPropertyChanging();
					this._ClientGuid = value;
					this.SendPropertyChanged("ClientGuid");
					this.OnClientGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityStateZipGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CityStateZipGuid
		{
			get
			{
				return this._CityStateZipGuid;
			}
			set
			{
				if ((this._CityStateZipGuid != value))
				{
					this.OnCityStateZipGuidChanging(value);
					this.SendPropertyChanging();
					this._CityStateZipGuid = value;
					this.SendPropertyChanged("CityStateZipGuid");
					this.OnCityStateZipGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentInfoGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PaymentInfoGuid
		{
			get
			{
				return this._PaymentInfoGuid;
			}
			set
			{
				if ((this._PaymentInfoGuid != value))
				{
					this.OnPaymentInfoGuidChanging(value);
					this.SendPropertyChanging();
					this._PaymentInfoGuid = value;
					this.SendPropertyChanged("PaymentInfoGuid");
					this.OnPaymentInfoGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FederatedID", DbType="VarChar(100)")]
		public string FederatedID
		{
			get
			{
				return this._FederatedID;
			}
			set
			{
				if ((this._FederatedID != value))
				{
					this.OnFederatedIDChanging(value);
					this.SendPropertyChanging();
					this._FederatedID = value;
					this.SendPropertyChanged("FederatedID");
					this.OnFederatedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FederatedKey", DbType="VarChar(400)")]
		public string FederatedKey
		{
			get
			{
				return this._FederatedKey;
			}
			set
			{
				if ((this._FederatedKey != value))
				{
					this.OnFederatedKeyChanging(value);
					this.SendPropertyChanging();
					this._FederatedKey = value;
					this.SendPropertyChanged("FederatedKey");
					this.OnFederatedKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FederatedIDProvider", DbType="VarChar(50)")]
		public string FederatedIDProvider
		{
			get
			{
				return this._FederatedIDProvider;
			}
			set
			{
				if ((this._FederatedIDProvider != value))
				{
					this.OnFederatedIDProviderChanging(value);
					this.SendPropertyChanging();
					this._FederatedIDProvider = value;
					this.SendPropertyChanged("FederatedIDProvider");
					this.OnFederatedIDProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashedPassword", DbType="VarChar(200)")]
		public string HashedPassword
		{
			get
			{
				return this._HashedPassword;
			}
			set
			{
				if ((this._HashedPassword != value))
				{
					this.OnHashedPasswordChanging(value);
					this.SendPropertyChanging();
					this._HashedPassword = value;
					this.SendPropertyChanged("HashedPassword");
					this.OnHashedPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountPaused", DbType="Bit NOT NULL")]
		public bool AccountPaused
		{
			get
			{
				return this._AccountPaused;
			}
			set
			{
				if ((this._AccountPaused != value))
				{
					this.OnAccountPausedChanging(value);
					this.SendPropertyChanging();
					this._AccountPaused = value;
					this.SendPropertyChanged("AccountPaused");
					this.OnAccountPausedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWaiverd", DbType="Bit NOT NULL")]
		public bool IsWaiverd
		{
			get
			{
				return this._IsWaiverd;
			}
			set
			{
				if ((this._IsWaiverd != value))
				{
					this.OnIsWaiverdChanging(value);
					this.SendPropertyChanging();
					this._IsWaiverd = value;
					this.SendPropertyChanged("IsWaiverd");
					this.OnIsWaiverdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreeDays", DbType="Int NOT NULL")]
		public int FreeDays
		{
			get
			{
				return this._FreeDays;
			}
			set
			{
				if ((this._FreeDays != value))
				{
					this.OnFreeDaysChanging(value);
					this.SendPropertyChanging();
					this._FreeDays = value;
					this.SendPropertyChanged("FreeDays");
					this.OnFreeDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credits", DbType="Decimal(18,2) NOT NULL")]
		public decimal Credits
		{
			get
			{
				return this._Credits;
			}
			set
			{
				if ((this._Credits != value))
				{
					this.OnCreditsChanging(value);
					this.SendPropertyChanging();
					this._Credits = value;
					this.SendPropertyChanged("Credits");
					this.OnCreditsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuspended", DbType="Bit NOT NULL")]
		public bool IsSuspended
		{
			get
			{
				return this._IsSuspended;
			}
			set
			{
				if ((this._IsSuspended != value))
				{
					this.OnIsSuspendedChanging(value);
					this.SendPropertyChanging();
					this._IsSuspended = value;
					this.SendPropertyChanged("IsSuspended");
					this.OnIsSuspendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFlagged", DbType="Bit NOT NULL")]
		public bool IsFlagged
		{
			get
			{
				return this._IsFlagged;
			}
			set
			{
				if ((this._IsFlagged != value))
				{
					this.OnIsFlaggedChanging(value);
					this.SendPropertyChanging();
					this._IsFlagged = value;
					this.SendPropertyChanged("IsFlagged");
					this.OnIsFlaggedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientAudit")]
	public partial class ClientAudit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ClientAuditGuid;
		
		private System.Guid _ClientGuid;
		
		private int _ClientID;
		
		private string _ClientName;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _Address;
		
		private System.Guid _CityStateZipGuid;
		
		private System.Guid _PaymentInfoGuid;
		
		private string _FederatedID;
		
		private string _FederatedKey;
		
		private string _FederatedIDProvider;
		
		private string _Username;
		
		private string _HashedPassword;
		
		private System.DateTime _DateModified;
		
		private System.Nullable<bool> _AccountPaused;
		
		private bool _IsWaiverd;
		
		private int _FreeDays;
		
		private decimal _Credits;
		
		private bool _IsSuspended;
		
		private bool _IsFlagged;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientAuditGuidChanging(System.Guid value);
    partial void OnClientAuditGuidChanged();
    partial void OnClientGuidChanging(System.Guid value);
    partial void OnClientGuidChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityStateZipGuidChanging(System.Guid value);
    partial void OnCityStateZipGuidChanged();
    partial void OnPaymentInfoGuidChanging(System.Guid value);
    partial void OnPaymentInfoGuidChanged();
    partial void OnFederatedIDChanging(string value);
    partial void OnFederatedIDChanged();
    partial void OnFederatedKeyChanging(string value);
    partial void OnFederatedKeyChanged();
    partial void OnFederatedIDProviderChanging(string value);
    partial void OnFederatedIDProviderChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnHashedPasswordChanging(string value);
    partial void OnHashedPasswordChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnAccountPausedChanging(System.Nullable<bool> value);
    partial void OnAccountPausedChanged();
    partial void OnIsWaiverdChanging(bool value);
    partial void OnIsWaiverdChanged();
    partial void OnFreeDaysChanging(int value);
    partial void OnFreeDaysChanged();
    partial void OnCreditsChanging(decimal value);
    partial void OnCreditsChanged();
    partial void OnIsSuspendedChanging(bool value);
    partial void OnIsSuspendedChanged();
    partial void OnIsFlaggedChanging(bool value);
    partial void OnIsFlaggedChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public ClientAudit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientAuditGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ClientAuditGuid
		{
			get
			{
				return this._ClientAuditGuid;
			}
			set
			{
				if ((this._ClientAuditGuid != value))
				{
					this.OnClientAuditGuidChanging(value);
					this.SendPropertyChanging();
					this._ClientAuditGuid = value;
					this.SendPropertyChanged("ClientAuditGuid");
					this.OnClientAuditGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ClientGuid
		{
			get
			{
				return this._ClientGuid;
			}
			set
			{
				if ((this._ClientGuid != value))
				{
					this.OnClientGuidChanging(value);
					this.SendPropertyChanging();
					this._ClientGuid = value;
					this.SendPropertyChanged("ClientGuid");
					this.OnClientGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityStateZipGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CityStateZipGuid
		{
			get
			{
				return this._CityStateZipGuid;
			}
			set
			{
				if ((this._CityStateZipGuid != value))
				{
					this.OnCityStateZipGuidChanging(value);
					this.SendPropertyChanging();
					this._CityStateZipGuid = value;
					this.SendPropertyChanged("CityStateZipGuid");
					this.OnCityStateZipGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentInfoGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PaymentInfoGuid
		{
			get
			{
				return this._PaymentInfoGuid;
			}
			set
			{
				if ((this._PaymentInfoGuid != value))
				{
					this.OnPaymentInfoGuidChanging(value);
					this.SendPropertyChanging();
					this._PaymentInfoGuid = value;
					this.SendPropertyChanged("PaymentInfoGuid");
					this.OnPaymentInfoGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FederatedID", DbType="VarChar(100)")]
		public string FederatedID
		{
			get
			{
				return this._FederatedID;
			}
			set
			{
				if ((this._FederatedID != value))
				{
					this.OnFederatedIDChanging(value);
					this.SendPropertyChanging();
					this._FederatedID = value;
					this.SendPropertyChanged("FederatedID");
					this.OnFederatedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FederatedKey", DbType="VarChar(400)")]
		public string FederatedKey
		{
			get
			{
				return this._FederatedKey;
			}
			set
			{
				if ((this._FederatedKey != value))
				{
					this.OnFederatedKeyChanging(value);
					this.SendPropertyChanging();
					this._FederatedKey = value;
					this.SendPropertyChanged("FederatedKey");
					this.OnFederatedKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FederatedIDProvider", DbType="VarChar(50)")]
		public string FederatedIDProvider
		{
			get
			{
				return this._FederatedIDProvider;
			}
			set
			{
				if ((this._FederatedIDProvider != value))
				{
					this.OnFederatedIDProviderChanging(value);
					this.SendPropertyChanging();
					this._FederatedIDProvider = value;
					this.SendPropertyChanged("FederatedIDProvider");
					this.OnFederatedIDProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashedPassword", DbType="VarChar(200)")]
		public string HashedPassword
		{
			get
			{
				return this._HashedPassword;
			}
			set
			{
				if ((this._HashedPassword != value))
				{
					this.OnHashedPasswordChanging(value);
					this.SendPropertyChanging();
					this._HashedPassword = value;
					this.SendPropertyChanged("HashedPassword");
					this.OnHashedPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountPaused", DbType="Bit")]
		public System.Nullable<bool> AccountPaused
		{
			get
			{
				return this._AccountPaused;
			}
			set
			{
				if ((this._AccountPaused != value))
				{
					this.OnAccountPausedChanging(value);
					this.SendPropertyChanging();
					this._AccountPaused = value;
					this.SendPropertyChanged("AccountPaused");
					this.OnAccountPausedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWaiverd", DbType="Bit NOT NULL")]
		public bool IsWaiverd
		{
			get
			{
				return this._IsWaiverd;
			}
			set
			{
				if ((this._IsWaiverd != value))
				{
					this.OnIsWaiverdChanging(value);
					this.SendPropertyChanging();
					this._IsWaiverd = value;
					this.SendPropertyChanged("IsWaiverd");
					this.OnIsWaiverdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreeDays", DbType="Int NOT NULL")]
		public int FreeDays
		{
			get
			{
				return this._FreeDays;
			}
			set
			{
				if ((this._FreeDays != value))
				{
					this.OnFreeDaysChanging(value);
					this.SendPropertyChanging();
					this._FreeDays = value;
					this.SendPropertyChanged("FreeDays");
					this.OnFreeDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credits", DbType="Decimal(18,2) NOT NULL")]
		public decimal Credits
		{
			get
			{
				return this._Credits;
			}
			set
			{
				if ((this._Credits != value))
				{
					this.OnCreditsChanging(value);
					this.SendPropertyChanging();
					this._Credits = value;
					this.SendPropertyChanged("Credits");
					this.OnCreditsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuspended", DbType="Bit NOT NULL")]
		public bool IsSuspended
		{
			get
			{
				return this._IsSuspended;
			}
			set
			{
				if ((this._IsSuspended != value))
				{
					this.OnIsSuspendedChanging(value);
					this.SendPropertyChanging();
					this._IsSuspended = value;
					this.SendPropertyChanged("IsSuspended");
					this.OnIsSuspendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFlagged", DbType="Bit NOT NULL")]
		public bool IsFlagged
		{
			get
			{
				return this._IsFlagged;
			}
			set
			{
				if ((this._IsFlagged != value))
				{
					this.OnIsFlaggedChanging(value);
					this.SendPropertyChanging();
					this._IsFlagged = value;
					this.SendPropertyChanged("IsFlagged");
					this.OnIsFlaggedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
