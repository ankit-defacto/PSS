/*  Generated by CodeGen written by Concord Mfg.
 *  Transform file used: BEServiceContract (v0.0.7.0).xslt
 *  Date generated: 3/28/2012 12:46:09 PM
 *  CodeGen version: 0.1.0.0  */

using System;
using System.ServiceModel;

namespace ConcordMfg.PremierSeniorSolutions.WebService.ServiceContracts
{
    [ServiceContract(Namespace = "http://ConcordMfg.PremierSeniorSolutions.WebService.ServiceContracts/2007/01",
        Name = "IFacilityPhoto", SessionMode = SessionMode.Allowed)]
    public interface IFacilityPhoto
    {
        /// <summary>
        /// Implementation of this method gets all facilityPhoto objects.
        /// </summary>
        /// <returns>All facilityPhoto objects.</returns>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.DefaultFaultContract))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetAllFacilityPhoto")]
        System.Collections.Generic.List<ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.FacilityPhoto> GetAllFacilityPhoto();

        /// <summary>
        /// Implementation of this method gets all facilityPhoto objects plus an undefined facilityPhoto.
        /// </summary>
        /// <returns>All facilityPhoto objects.</returns>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.DefaultFaultContract))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetAllFacilityPhotoWithUndefined")]
        System.Collections.Generic.List<ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.FacilityPhoto> GetAllFacilityPhotoWithUndefined();

        /// <summary>
        /// Implementation of this method gets the facilityPhoto object given a facilityPhoto identifier.
        /// </summary>
		/// <param name="facilityPhotoGuid">Photo Guid</param>
        /// <returns>The facilityPhoto object.</returns>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.FacilityPhotoFault))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetFacilityPhotoByFacilityPhotoGuid")]
        ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.FacilityPhoto GetFacilityPhotoByFacilityPhotoGuid(Guid facilityPhotoGuid);

        /// <summary>
        /// Implementation of this method inserts a facilityPhoto object.
        /// </summary>
        /// <param name="facilityPhoto">The facilityPhoto object to insert.</param>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.DefaultFaultContract))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "InsertFacilityPhoto")]
        void InsertFacilityPhoto(ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.FacilityPhoto facilityPhoto);

        /// <summary>
        /// Implementation of this method updates a facilityPhoto object.
        /// </summary>
        /// <param name="facilityPhoto">The facilityPhoto object to update.</param>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.DefaultFaultContract))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "UpdateFacilityPhoto")]
        void UpdateFacilityPhoto(ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.FacilityPhoto facilityPhoto);

        /// <summary>
        /// Implementation of this method deletes a facilityPhoto object.
        /// </summary>
        /// <param name="facilityPhoto">The facilityPhoto object to delete.</param>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.DefaultFaultContract))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "DeleteFacilityPhoto")]
        void DeleteFacilityPhoto(ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.FacilityPhoto facilityPhoto);

        /// <summary>
        /// Implementation of this method gets a list of facilityPhotos associated to a facility.
        /// </summary>
		/// <param name="facilityGuid">Facility Guid</param>
        /// <returns>The list of facilityPhotos associated with the facility.</returns>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.FacilityFault))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetFacilityPhotosForFacilityByFacilityGuid")]
        System.Collections.Generic.List<ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.FacilityPhoto> GetFacilityPhotosForFacilityByFacilityGuid(Guid facilityGuid);
	}
}
	