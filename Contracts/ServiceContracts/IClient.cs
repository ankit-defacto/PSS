/*  Generated by CodeGen written by Concord Mfg.
 *  Transform file used: BEServiceContract (v0.0.7.0).xslt
 *  Date generated: 3/28/2012 12:46:09 PM
 *  CodeGen version: 0.1.0.0  */

using System;
using System.ServiceModel;

namespace ConcordMfg.PremierSeniorSolutions.WebService.ServiceContracts
{
    [ServiceContract(Namespace = "http://ConcordMfg.PremierSeniorSolutions.WebService.ServiceContracts/2007/01",
        Name = "IClient", SessionMode = SessionMode.Allowed)]
    public interface IClient
    {
        /// <summary>
        /// Implementation of this method gets all client objects.
        /// </summary>
        /// <returns>All client objects.</returns>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.DefaultFaultContract))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetAllClient")]
        System.Collections.Generic.List<ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.Client> GetAllClient();

        /// <summary>
        /// Implementation of this method gets all client objects plus an undefined client.
        /// </summary>
        /// <returns>All client objects.</returns>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.DefaultFaultContract))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetAllClientWithUndefined")]
        System.Collections.Generic.List<ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.Client> GetAllClientWithUndefined();

        /// <summary>
        /// Implementation of this method gets the client object given a client identifier.
        /// </summary>
		/// <param name="clientGuid">Client Guid</param>
        /// <returns>The client object.</returns>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.ClientFault))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetClientByClientGuid")]
        ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.Client GetClientByClientGuid(Guid clientGuid);

        /// <summary>
        /// Implementation of this method inserts a client object.
        /// </summary>
        /// <param name="client">The client object to insert.</param>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.DefaultFaultContract))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "InsertClient")]
        void InsertClient(ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.Client client);

        /// <summary>
        /// Implementation of this method updates a client object.
        /// </summary>
        /// <param name="client">The client object to update.</param>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.DefaultFaultContract))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "UpdateClient")]
        void UpdateClient(ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.Client client);

        /// <summary>
        /// Implementation of this method deletes a client object.
        /// </summary>
        /// <param name="client">The client object to delete.</param>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.DefaultFaultContract))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "DeleteClient")]
        void DeleteClient(ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.Client client);

        /// <summary>
        /// Implementation of this method gets a list of clients associated to a cityStateZip.
        /// </summary>
		/// <param name="cityStateZipGuid">City State Zip Guid</param>
        /// <returns>The list of clients associated with the cityStateZip.</returns>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.CityStateZipFault))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetClientsForCityStateZipByCityStateZipGuid")]
        System.Collections.Generic.List<ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.Client> GetClientsForCityStateZipByCityStateZipGuid(Guid cityStateZipGuid);

        /// <summary>
        /// Implementation of this method gets a list of clients associated to a paymentInfo.
        /// </summary>
		/// <param name="paymentInfoGuid">Payment Info Guid</param>
        /// <returns>The list of clients associated with the paymentInfo.</returns>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.PaymentInfoFault))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetClientsForPaymentInfoByPaymentInfoGuid")]
        System.Collections.Generic.List<ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.Client> GetClientsForPaymentInfoByPaymentInfoGuid(Guid paymentInfoGuid);
	}
}
	