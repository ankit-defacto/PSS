/*  Generated by CodeGen written by Concord Mfg.
 *  Transform file used: BEServiceContract (v0.0.7.0).xslt
 *  Date generated: 3/28/2012 12:46:09 PM
 *  CodeGen version: 0.1.0.0  */

using System;
using System.ServiceModel;

namespace ConcordMfg.PremierSeniorSolutions.WebService.ServiceContracts
{
    [ServiceContract(Namespace = "http://ConcordMfg.PremierSeniorSolutions.WebService.ServiceContracts/2007/01",
        Name = "IClientAudit", SessionMode = SessionMode.Allowed)]
    public interface IClientAudit
    {
        /// <summary>
        /// Implementation of this method gets all clientAudit objects.
        /// </summary>
        /// <returns>All clientAudit objects.</returns>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.DefaultFaultContract))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetAllClientAudit")]
        System.Collections.Generic.List<ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.ClientAudit> GetAllClientAudit();

        /// <summary>
        /// Implementation of this method gets all clientAudit objects plus an undefined clientAudit.
        /// </summary>
        /// <returns>All clientAudit objects.</returns>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.DefaultFaultContract))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetAllClientAuditWithUndefined")]
        System.Collections.Generic.List<ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.ClientAudit> GetAllClientAuditWithUndefined();

        /// <summary>
        /// Implementation of this method gets the clientAudit object given a clientAudit identifier.
        /// </summary>
		/// <param name="clientAuditGuid">Client Audit Guid</param>
        /// <returns>The clientAudit object.</returns>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.ClientAuditFault))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetClientAuditByClientAuditGuid")]
        ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.ClientAudit GetClientAuditByClientAuditGuid(Guid clientAuditGuid);

        /// <summary>
        /// Implementation of this method inserts a clientAudit object.
        /// </summary>
        /// <param name="clientAudit">The clientAudit object to insert.</param>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.DefaultFaultContract))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "InsertClientAudit")]
        void InsertClientAudit(ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.ClientAudit clientAudit);

        /// <summary>
        /// Implementation of this method updates a clientAudit object.
        /// </summary>
        /// <param name="clientAudit">The clientAudit object to update.</param>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.DefaultFaultContract))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "UpdateClientAudit")]
        void UpdateClientAudit(ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.ClientAudit clientAudit);

        /// <summary>
        /// Implementation of this method deletes a clientAudit object.
        /// </summary>
        /// <param name="clientAudit">The clientAudit object to delete.</param>
        /// <remarks>This method is an operations contract.</remarks>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.DefaultFaultContract))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "DeleteClientAudit")]
        void DeleteClientAudit(ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.ClientAudit clientAudit);

        /// <summary>
        /// Implementation of this method gets a list of clientAudits associated to a client.
        /// </summary>
		/// <param name="clientGuid">Client Guid</param>
        /// <returns>The list of clientAudits associated with the client.</returns>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.ClientFault))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetClientAuditsForClientByClientGuid")]
        System.Collections.Generic.List<ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.ClientAudit> GetClientAuditsForClientByClientGuid(Guid clientGuid);

        /// <summary>
        /// Implementation of this method gets a list of clientAudits associated to a cityStateZip.
        /// </summary>
		/// <param name="cityStateZipGuid">City State Zip Guid</param>
        /// <returns>The list of clientAudits associated with the cityStateZip.</returns>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.CityStateZipFault))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetClientAuditsForCityStateZipByCityStateZipGuid")]
        System.Collections.Generic.List<ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.ClientAudit> GetClientAuditsForCityStateZipByCityStateZipGuid(Guid cityStateZipGuid);

        /// <summary>
        /// Implementation of this method gets a list of clientAudits associated to a paymentInfo.
        /// </summary>
		/// <param name="paymentInfoGuid">Payment Info Guid</param>
        /// <returns>The list of clientAudits associated with the paymentInfo.</returns>
        [FaultContract(typeof(ConcordMfg.PremierSeniorSolutions.WebService.FaultContracts.PaymentInfoFault))]
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetClientAuditsForPaymentInfoByPaymentInfoGuid")]
        System.Collections.Generic.List<ConcordMfg.PremierSeniorSolutions.WebService.DataContracts.ClientAudit> GetClientAuditsForPaymentInfoByPaymentInfoGuid(Guid paymentInfoGuid);
	}
}
	