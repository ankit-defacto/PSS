/*  Generated by CodeGen written by Concord Mfg.
 * Transform file used: BELogic (v0.2.0.0).xslt
 * Date generated: 3/28/2012 12:46:04 PM
 * CodeGen version: 0.2.0.0  */

using System;
using System.Collections.Generic;
using System.Linq;
using BE = ConcordMfg.PremierSeniorSolutions.WebService.BusinessEntities;
using DA = ConcordMfg.PremierSeniorSolutions.WebService.DataAccess;
using ConcordMfg.PremierSeniorSolutions.WebService.EntityConversions;

namespace ConcordMfg.PremierSeniorSolutions.WebService.BusinessLogic
{
	public class PaymentInfoAuditLogic
	{
		#region Public CRUD Methods
		public List<BE.PaymentInfoAudit> GetAllPaymentInfoAudit()
		{
			DA.PaymentInfoAuditGateway gateway = new DA.PaymentInfoAuditGateway();
			List<BE.PaymentInfoAudit> result = new List<BE.PaymentInfoAudit>();
			result = gateway.GetAll().ToBusinessEntitiesList();
			return result;
		}

		public List<BE.PaymentInfoAudit> GetAllPaymentInfoAuditWithUndefined()
		{
			DA.PaymentInfoAuditGateway gateway = new DA.PaymentInfoAuditGateway();
			List<BE.PaymentInfoAudit> result = new List<BE.PaymentInfoAudit>();
			result = gateway.GetAllWithUndefined().ToBusinessEntitiesList();
			return result;
		}

		public BE.PaymentInfoAudit GetPaymentInfoAuditByPaymentInfoAuditGuid(Guid paymentInfoAuditGuid)
		{
			DA.PaymentInfoAuditGateway gateway = new DA.PaymentInfoAuditGateway();
			BE.PaymentInfoAudit result = new BE.PaymentInfoAudit();
			result = gateway.GetByPK(paymentInfoAuditGuid).ToBusinessEntity();
			return result;
		}

		public BE.PaymentInfoAudit InsertPaymentInfoAudit(BE.PaymentInfoAudit entity)
		{
			//@@NEW - removed try/catch. insert returns DA entity (with new data). this method now returns an entity.
			DA.PaymentInfoAuditGateway gateway = new DA.PaymentInfoAuditGateway();
			DA.PaymentInfoAudit result = gateway.Insert(entity.ToDataEntity());
			return result.ToBusinessEntity();
		}

		//@@NEW - new method.
		public BE.PaymentInfoAudit InsertPaymentInfoAudit(BE.PaymentInfo entity)
		{
			// Create the audit record.
			BE.PaymentInfoAudit audit = new BE.PaymentInfoAudit(entity);
			// Insert the audit record.
			BE.PaymentInfoAudit result = InsertPaymentInfoAudit(audit);

			if (Guid.Empty == result.PaymentInfoAuditGuid)
				throw new BE.PaymentInfoAuditException("PaymentInfo Audit record was not inserted.", audit);

			return result;
		}
        		
		#endregion

		#region Public Many-To-One Methods

		public List<BE.PaymentInfoAudit> GetPaymentInfoAuditsForPaymentInfoByPaymentInfoGuid(Guid paymentInfoGuid)
		{
			DA.PaymentInfoAuditGateway gateway = new DA.PaymentInfoAuditGateway();
			List<BE.PaymentInfoAudit> result = new List<BE.PaymentInfoAudit>();
			result = gateway.GetForPaymentInfoByPaymentInfoGuid(paymentInfoGuid).ToBusinessEntitiesList();
			return result;
		}

		#endregion
		
		#region Public Many-To-Many Methods

		#endregion
	}
}